{
  "address": "0x15f2450c5B3f9Ef15894DdAd81a9c3E1D0E14896",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oldOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "DefaultOracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oldOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "OracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposedGovernor",
          "type": "address"
        }
      ],
      "name": "UpdatedGovernor",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "acceptGovernorship",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        },
        {
          "internalType": "contract IOracle[]",
          "name": "_oracles",
          "type": "address[]"
        }
      ],
      "name": "addOrUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        },
        {
          "internalType": "contract IOracle[]",
          "name": "_oracles",
          "type": "address[]"
        },
        {
          "internalType": "contract IOracle",
          "name": "_defaultOracle",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracles",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_assetIn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_assetOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "quoteTokenToUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountInUsd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountInUsd",
          "type": "uint256"
        }
      ],
      "name": "quoteUsdToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOracle",
          "name": "_newDefaultOracle",
          "type": "address"
        }
      ],
      "name": "setDefaultOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposedGovernor",
          "type": "address"
        }
      ],
      "name": "transferGovernorship",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x30c17e08b787f5d83bd1b57afe9afaf923b04d53b30696265250212db4e686e5",
  "receipt": {
    "to": null,
    "from": "0xF5F5195cF6998c57C651f9f0bBFA7cFC72a6FaC1",
    "contractAddress": "0x15f2450c5B3f9Ef15894DdAd81a9c3E1D0E14896",
    "transactionIndex": 0,
    "gasUsed": "1246726",
    "logsBloom": "0x00000004000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000100000800000000000000000000000000400000000000000000000000000000000000000000000000000000000020000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000008000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x4b2a8acfa6bd5cda7ce2a8b487f83d32f42625f22df1d5dc256b693755e0f46c",
    "transactionHash": "0x30c17e08b787f5d83bd1b57afe9afaf923b04d53b30696265250212db4e686e5",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 15251687,
        "transactionHash": "0x30c17e08b787f5d83bd1b57afe9afaf923b04d53b30696265250212db4e686e5",
        "address": "0x15f2450c5B3f9Ef15894DdAd81a9c3E1D0E14896",
        "topics": [
          "0xd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5f5195cf6998c57c651f9f0bbfa7cfc72a6fac1"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4b2a8acfa6bd5cda7ce2a8b487f83d32f42625f22df1d5dc256b693755e0f46c"
      }
    ],
    "blockNumber": 15251687,
    "cumulativeGasUsed": "1246726",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d8b118bc2b869f1cad3e67e355255d78",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oldOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"DefaultOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oldOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedGovernor\",\"type\":\"address\"}],\"name\":\"UpdatedGovernor\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptGovernorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"contract IOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"}],\"name\":\"addOrUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"contract IOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"},{\"internalType\":\"contract IOracle\",\"name\":\"_defaultOracle\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"quoteTokenToUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountInUsd\",\"type\":\"uint256\"}],\"name\":\"quoteUsdToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"_newDefaultOracle\",\"type\":\"address\"}],\"name\":\"setDefaultOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposedGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptGovernorship()\":{\"details\":\"Allows new governor to accept governorship of the contract.\"},\"addOrUpdate(address[],address[])\":{\"params\":{\"_assets\":\"The ERC20 asset addresses to link to `_oracles`\",\"_oracles\":\"The `IOracle` contracts to be assigned to `_assets`\"}},\"quote(address,address,uint256)\":{\"params\":{\"_amountIn\":\"The amount to convert from\",\"_assetIn\":\"The asset to convert from\",\"_assetOut\":\"The asset to convert to\"},\"returns\":{\"_amountOut\":\"The converted amount\"}},\"quoteTokenToUsd(address,uint256)\":{\"params\":{\"_amount\":\"The amount to convert\",\"_asset\":\"The asset's address\"},\"returns\":{\"_amountInUsd\":\"The amount in USD (18 decimals)\"}},\"quoteUsdToToken(address,uint256)\":{\"params\":{\"_amountInUsd\":\"The amount in USD (18 decimals)\",\"_asset\":\"The asset's address\"},\"returns\":{\"_amount\":\"The converted amount\"}},\"setDefaultOracle(address)\":{\"details\":\"We allow null address in order to turn off the default oracle\",\"params\":{\"_newDefaultOracle\":\"The new default oracle contract\"}},\"sweep(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount to send\",\"_to\":\"The recipient of the transfer\",\"_token\":\"The token to transfer\"}},\"transferGovernorship(address)\":{\"details\":\"Transfers governorship of the contract to a new account (`proposedGovernor`). Can only be called by the current owner.\"}},\"title\":\"The Master oracle that is called by `Controller`\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultOracleUpdated(address,address)\":{\"notice\":\"Event emitted when the default oracle is updated\"},\"OracleUpdated(address,address,address)\":{\"notice\":\"Event emitted when a asset's oracle is updated\"}},\"kind\":\"user\",\"methods\":{\"addOrUpdate(address[],address[])\":{\"notice\":\"Add or update token oracles\"},\"defaultOracle()\":{\"notice\":\"The Default/fallback oracle\"},\"oracles(address)\":{\"notice\":\"Maps asset addresses to oracle contracts\"},\"quote(address,address,uint256)\":{\"notice\":\"Convert assets' amounts\"},\"quoteTokenToUsd(address,uint256)\":{\"notice\":\"Convert asset's amount to USD\"},\"quoteUsdToToken(address,uint256)\":{\"notice\":\"Convert USD to asset's amount\"},\"setDefaultOracle(address)\":{\"notice\":\"Update the default oracle contract\"},\"sweep(address,address,uint256)\":{\"notice\":\"ERC20 recovery in case of stuck tokens due direct transfers to the contract address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/MasterOracle.sol\":\"MasterOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/access/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../dependencies/openzeppelin/utils/Context.sol\\\";\\nimport \\\"../dependencies/openzeppelin/proxy/utils/Initializable.sol\\\";\\nimport \\\"../utils/TokenHolder.sol\\\";\\nimport \\\"../interface/IGovernable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (governor) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the governor account will be the one that deploys the contract. This\\n * can later be changed with {transferGovernorship}.\\n *\\n */\\nabstract contract Governable is IGovernable, Context, TokenHolder, Initializable {\\n    address public governor;\\n    address public proposedGovernor;\\n\\n    event UpdatedGovernor(address indexed previousGovernor, address indexed proposedGovernor);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial governor.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        governor = msgSender;\\n        emit UpdatedGovernor(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev If inheriting child is using proxy then child contract can use\\n     * __Governable_init() function to initialization this contract\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __Governable_init() internal initializer {\\n        address msgSender = _msgSender();\\n        governor = msgSender;\\n        emit UpdatedGovernor(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the governor.\\n     */\\n    modifier onlyGovernor() {\\n        require(governor == _msgSender(), \\\"not-governor\\\");\\n        _;\\n    }\\n\\n    function _requireCanSweep() internal view override onlyGovernor {}\\n\\n    /**\\n     * @dev Transfers governorship of the contract to a new account (`proposedGovernor`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferGovernorship(address _proposedGovernor) external onlyGovernor {\\n        require(_proposedGovernor != address(0), \\\"proposed-governor-is-zero\\\");\\n        proposedGovernor = _proposedGovernor;\\n    }\\n\\n    /**\\n     * @dev Allows new governor to accept governorship of the contract.\\n     */\\n    function acceptGovernorship() external {\\n        require(proposedGovernor == _msgSender(), \\\"not-the-proposed-governor\\\");\\n        emit UpdatedGovernor(governor, proposedGovernor);\\n        governor = proposedGovernor;\\n        proposedGovernor = address(0);\\n    }\\n}\\n\",\"keccak256\":\"0x306f97343e55b8444d3ca72d0246c04cb10fd728507d163669966d564889eb14\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/interface/IGovernable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @notice Governable interface\\n */\\ninterface IGovernable {\\n    function governor() external view returns (address _governor);\\n\\n    function transferGovernorship(address _proposedGovernor) external;\\n}\\n\",\"keccak256\":\"0xbe84461adf33aec1bf31b6d84a5380aaeb791de9a4b95346dd8270dc6632984e\",\"license\":\"MIT\"},\"contracts/interface/oracle/IMasterOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../dependencies/openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMasterOracle {\\n    function quoteTokenToUsd(IERC20 _asset, uint256 _amount) external view returns (uint256 _amountInUsd);\\n\\n    function quoteUsdToToken(IERC20 _asset, uint256 _amountInUsd) external view returns (uint256 _amount);\\n\\n    function quote(\\n        IERC20 _assetIn,\\n        IERC20 _assetOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256 _amountOut);\\n}\\n\",\"keccak256\":\"0xf250e3b49704c620bbe6e5fd8cf2f82f52adc6c25cd4baac6be669165b86b8ff\",\"license\":\"MIT\"},\"contracts/interface/oracle/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../dependencies/openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\ninterface IOracle {\\n    function getPriceInUsd(IERC20 _asset) external view returns (uint256 _priceInUsd);\\n}\\n\",\"keccak256\":\"0x027e89658957b1b7c2ac4866e6082468f19b47a8c0fa59bb0d0a119cdfd3b0a7\",\"license\":\"MIT\"},\"contracts/oracle/MasterOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../dependencies/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../access/Governable.sol\\\";\\nimport \\\"../interface/oracle/IMasterOracle.sol\\\";\\nimport \\\"../interface/oracle/IOracle.sol\\\";\\n\\n/**\\n * @title The Master oracle that is called by `Controller`\\n */\\ncontract MasterOracle is Initializable, IMasterOracle, Governable {\\n    /**\\n     * @notice Maps asset addresses to oracle contracts\\n     */\\n    mapping(address => IOracle) public oracles;\\n\\n    /**\\n     * @notice The Default/fallback oracle\\n     */\\n    IOracle public defaultOracle;\\n\\n    /**\\n     * @notice Event emitted when the default oracle is updated\\n     */\\n    event DefaultOracleUpdated(IOracle oldOracle, IOracle newOracle);\\n\\n    /**\\n     * @notice Event emitted when a asset's oracle is updated\\n     */\\n    event OracleUpdated(address asset, IOracle oldOracle, IOracle newOracle);\\n\\n    function initialize(\\n        address[] calldata _assets,\\n        IOracle[] calldata _oracles,\\n        IOracle _defaultOracle\\n    ) external initializer {\\n        __Governable_init();\\n\\n        _updateOracles(_assets, _oracles);\\n        defaultOracle = _defaultOracle;\\n    }\\n\\n    /**\\n     * @notice Sets `_oracles` for `_assets`.\\n     * @param _assets The ERC20 asset addresses to link to `_oracles`.\\n     * @param _oracles The `IOracle` contracts to be assigned to `_assets`.\\n     * @dev We allow null address inside of the `_oracles` array in order to turn off oracle for a given asset\\n     */\\n    function _updateOracles(address[] calldata _assets, IOracle[] calldata _oracles) private {\\n        uint256 _assetsLength = _assets.length;\\n        require(_assetsLength == _oracles.length, \\\"invalid-arrays-length\\\");\\n\\n        for (uint256 i; i < _assetsLength; i++) {\\n            address _asset = _assets[i];\\n            require(_asset != address(0), \\\"an-asset-has-null-address\\\");\\n            IOracle _currentOracle = oracles[_asset];\\n            IOracle _newOracle = _oracles[i];\\n            require(_newOracle != _currentOracle, \\\"a-new-oracle-same-as-current\\\");\\n            emit OracleUpdated(_asset, _currentOracle, _newOracle);\\n            oracles[_asset] = _newOracle;\\n        }\\n    }\\n\\n    /**\\n     * @notice Add or update token oracles\\n     * @param _assets The ERC20 asset addresses to link to `_oracles`\\n     * @param _oracles The `IOracle` contracts to be assigned to `_assets`\\n     */\\n    function addOrUpdate(address[] calldata _assets, IOracle[] calldata _oracles) external onlyGovernor {\\n        require(_assets.length > 0 && _oracles.length > 0, \\\"invalid-arrays-length\\\");\\n        _updateOracles(_assets, _oracles);\\n    }\\n\\n    /**\\n     * @notice Update the default oracle contract\\n     * @param _newDefaultOracle The new default oracle contract\\n     * @dev We allow null address in order to turn off the default oracle\\n     */\\n    function setDefaultOracle(IOracle _newDefaultOracle) external onlyGovernor {\\n        IOracle _currentDefaultOracle = defaultOracle;\\n        require(_newDefaultOracle != _currentDefaultOracle, \\\"new-oracle-is-same-as-current\\\");\\n        emit DefaultOracleUpdated(_currentDefaultOracle, _newDefaultOracle);\\n        defaultOracle = _newDefaultOracle;\\n    }\\n\\n    /**\\n     * @notice Get asset's USD price\\n     * @param _asset The asset's address\\n     * @return _priceInUsd The USD price (18 decimals)\\n     */\\n    function _getPriceInUsd(IERC20 _asset) private view returns (uint256 _priceInUsd) {\\n        IOracle _oracle = oracles[address(_asset)];\\n\\n        if (address(_oracle) != address(0)) {\\n            _priceInUsd = _oracle.getPriceInUsd(_asset);\\n        } else if (address(defaultOracle) != address(0)) {\\n            _priceInUsd = defaultOracle.getPriceInUsd(_asset);\\n        } else {\\n            revert(\\\"asset-without-oracle\\\");\\n        }\\n\\n        require(_priceInUsd > 0, \\\"invalid-price\\\");\\n    }\\n\\n    /**\\n     * @notice Convert asset's amount to USD\\n     * @param _asset The asset's address\\n     * @param _amount The amount to convert\\n     * @return _amountInUsd The amount in USD (18 decimals)\\n     */\\n    function quoteTokenToUsd(IERC20 _asset, uint256 _amount) public view returns (uint256 _amountInUsd) {\\n        uint256 _priceInUsd = _getPriceInUsd(_asset);\\n        _amountInUsd = (_amount * _priceInUsd) / 10**IERC20Metadata(address(_asset)).decimals();\\n    }\\n\\n    /**\\n     * @notice Convert USD to asset's amount\\n     * @param _asset The asset's address\\n     * @param _amountInUsd The amount in USD (18 decimals)\\n     * @return _amount The converted amount\\n     */\\n    function quoteUsdToToken(IERC20 _asset, uint256 _amountInUsd) public view returns (uint256 _amount) {\\n        uint256 _priceInUsd = _getPriceInUsd(_asset);\\n        _amount = (_amountInUsd * 10**IERC20Metadata(address(_asset)).decimals()) / _priceInUsd;\\n    }\\n\\n    /**\\n     * @notice Convert assets' amounts\\n     * @param _assetIn The asset to convert from\\n     * @param _assetOut The asset to convert to\\n     * @param _amountIn The amount to convert from\\n     * @return _amountOut The converted amount\\n     */\\n    function quote(\\n        IERC20 _assetIn,\\n        IERC20 _assetOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256 _amountOut) {\\n        uint256 _amountInUsd = quoteTokenToUsd(_assetIn, _amountIn);\\n        _amountOut = quoteUsdToToken(_assetOut, _amountInUsd);\\n    }\\n}\\n\",\"keccak256\":\"0xb36ff48882db79314d28a01591039d496121d363c393ed0e3918ea62b8a72923\",\"license\":\"MIT\"},\"contracts/utils/TokenHolder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../dependencies/openzeppelin/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"../dependencies/openzeppelin/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title Utils contract that handles tokens sent to it\\n */\\nabstract contract TokenHolder {\\n    using SafeERC20 for IERC20;\\n\\n    /**\\n     * @notice Function that reverts if the caller isn't allowed to sweep tokens\\n     */\\n    function _requireCanSweep() internal view virtual;\\n\\n    /**\\n     * @notice ERC20 recovery in case of stuck tokens due direct transfers to the contract address.\\n     * @param _token The token to transfer\\n     * @param _to The recipient of the transfer\\n     * @param _amount The amount to send\\n     */\\n    function sweep(\\n        IERC20 _token,\\n        address _to,\\n        uint256 _amount\\n    ) external {\\n        _requireCanSweep();\\n\\n        if (address(_token) == address(0)) {\\n            Address.sendValue(payable(_to), _amount);\\n        } else {\\n            _token.safeTransfer(_to, _amount);\\n        }\\n    }\\n\\n    /**\\n     * @dev Revert when receiving by default\\n     */\\n    receive() external payable virtual {\\n        revert(\\\"receive-not-allowed\\\");\\n    }\\n\\n    /**\\n     * @dev Revert fallback calls\\n     */\\n    fallback() external payable {\\n        revert(\\\"fallback-not-allowed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x45fed62204599ac0c9bed76de4ce8b6b070d96d548e029ce1f9f2d0c7c87a99d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a3506115278061006a6000396000f3fe6080604052600436106100b65760003560e01c80638d0dba001161006f5780638d0dba001461021b578063addd509914610249578063b5e9bef51461027f578063b64663841461029f578063b6aa515b146102bf578063c44014d2146102df578063f3b27bc3146102ff576100fe565b80630c340a241461013d5780635274ac3f1461017957806362c067671461019b57806380dce169146101bb57806389f74c0c146101db5780638a11a370146101fb576100fe565b366100fe5760405162461bcd60e51b81526020600482015260136024820152721c9958d95a5d994b5b9bdd0b585b1b1bddd959606a1b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b60448201526064016100f5565b34801561014957600080fd5b50600054610163906201000090046001600160a01b031681565b6040516101709190611009565b60405180910390f35b34801561018557600080fd5b5061019961019436600461107e565b610314565b005b3480156101a757600080fd5b506101996101b6366004611102565b6103b4565b3480156101c757600080fd5b50600354610163906001600160a01b031681565b3480156101e757600080fd5b506101996101f6366004611143565b6103ed565b34801561020757600080fd5b50600154610163906001600160a01b031681565b34801561022757600080fd5b5061023b6102363660046111af565b61045a565b604051908152602001610170565b34801561025557600080fd5b506101636102643660046111db565b6002602052600090815260409020546001600160a01b031681565b34801561028b57600080fd5b5061023b61029a3660046111af565b610500565b3480156102ab57600080fd5b5061023b6102ba366004611102565b610595565b3480156102cb57600080fd5b506101996102da3660046111db565b6105b7565b3480156102eb57600080fd5b506101996102fa3660046111db565b61065c565b34801561030b57600080fd5b50610199610753565b600054610100900460ff168061032d575060005460ff16155b6103495760405162461bcd60e51b81526004016100f5906111f8565b600054610100900460ff1615801561036b576000805461ffff19166101011790555b610373610821565b61037f868686866108d7565b600380546001600160a01b0319166001600160a01b03841617905580156103ac576000805461ff00191690555b505050505050565b6103bc610ab3565b6001600160a01b0383166103d9576103d48282610ae6565b505050565b6103d46001600160a01b0384168383610bff565b6000546001600160a01b036201000090910416331461041e5760405162461bcd60e51b81526004016100f590611246565b821580159061042c57508015155b6104485760405162461bcd60e51b81526004016100f59061126c565b610454848484846108d7565b50505050565b60008061046684610c51565b9050836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a157600080fd5b505afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d9919061129b565b6104e490600a6113ba565b6104ee82856113c9565b6104f891906113e8565b949350505050565b60008061050c84610c51565b905080846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610580919061129b565b61058b90600a6113ba565b6104ee90856113c9565b6000806105a2858461045a565b90506105ae8482610500565b95945050505050565b6000546001600160a01b03620100009091041633146105e85760405162461bcd60e51b81526004016100f590611246565b6001600160a01b03811661063a5760405162461bcd60e51b815260206004820152601960248201527870726f706f7365642d676f7665726e6f722d69732d7a65726f60381b60448201526064016100f5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b036201000090910416331461068d5760405162461bcd60e51b81526004016100f590611246565b6003546001600160a01b039081169082168114156106ed5760405162461bcd60e51b815260206004820152601d60248201527f6e65772d6f7261636c652d69732d73616d652d61732d63757272656e7400000060448201526064016100f5565b604080516001600160a01b038084168252841660208201527f91f0076b6a62d3cb799d1ebce63c4e8d031ed0a90443b8f6172b391682b58f4b910160405180910390a150600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146107a95760405162461bcd60e51b81526020600482015260196024820152783737ba16ba343296b83937b837b9b2b216b3b7bb32b93737b960391b60448201526064016100f5565b600154600080546040516001600160a01b039384169362010000909204909116917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d091a3600180546000805462010000600160b01b0319166001600160a01b03831662010000021790556001600160a01b0319169055565b600054610100900460ff168061083a575060005460ff16155b6108565760405162461bcd60e51b81526004016100f5906111f8565b600054610100900460ff16158015610878576000805461ffff19166101011790555b6000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a35080156108d4576000805461ff00191690555b50565b828181146108f75760405162461bcd60e51b81526004016100f59061126c565b60005b818110156103ac5760008686838181106109165761091661140a565b905060200201602081019061092b91906111db565b90506001600160a01b03811661097f5760405162461bcd60e51b8152602060048201526019602482015278616e2d61737365742d6861732d6e756c6c2d6164647265737360381b60448201526064016100f5565b6001600160a01b03808216600090815260026020526040812054909116908686858181106109af576109af61140a565b90506020020160208101906109c491906111db565b9050816001600160a01b0316816001600160a01b03161415610a285760405162461bcd60e51b815260206004820152601c60248201527f612d6e65772d6f7261636c652d73616d652d61732d63757272656e740000000060448201526064016100f5565b604080516001600160a01b038581168252848116602083015283168183015290517fa18d4edc0f9c89f7feb41d0243d7f20bf44c5b426ede1cc1014a31ab8eb724899181900360600190a16001600160a01b03928316600090815260026020526040902080546001600160a01b03191691909316179091555080610aab81611420565b9150506108fa565b6000546001600160a01b0362010000909104163314610ae45760405162461bcd60e51b81526004016100f590611246565b565b80471015610b365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100f5565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b83576040519150601f19603f3d011682016040523d82523d6000602084013e610b88565b606091505b50509050806103d45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100f5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103d4908490610dbd565b6001600160a01b038082166000908152600260205260408120549091168015610cf7576040516307ee40bf60e01b81526001600160a01b038216906307ee40bf90610ca0908690600401611009565b60206040518083038186803b158015610cb857600080fd5b505afa158015610ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf0919061143b565b9150610d77565b6003546001600160a01b031615610d38576003546040516307ee40bf60e01b81526001600160a01b03909116906307ee40bf90610ca0908690600401611009565b60405162461bcd60e51b815260206004820152601460248201527361737365742d776974686f75742d6f7261636c6560601b60448201526064016100f5565b60008211610db75760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642d707269636560981b60448201526064016100f5565b50919050565b6000610e12826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e8f9092919063ffffffff16565b8051909150156103d45780806020019051810190610e309190611454565b6103d45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f5565b6060610e9e8484600085610ea8565b90505b9392505050565b606082471015610f095760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f5565b843b610f575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f5565b600080866001600160a01b03168587604051610f7391906114a2565b60006040518083038185875af1925050503d8060008114610fb0576040519150601f19603f3d011682016040523d82523d6000602084013e610fb5565b606091505b5091509150610fc5828286610fd0565b979650505050505050565b60608315610fdf575081610ea1565b825115610fef5782518084602001fd5b8160405162461bcd60e51b81526004016100f591906114be565b6001600160a01b0391909116815260200190565b60008083601f84011261102f57600080fd5b50813567ffffffffffffffff81111561104757600080fd5b6020830191508360208260051b850101111561106257600080fd5b9250929050565b6001600160a01b03811681146108d457600080fd5b60008060008060006060868803121561109657600080fd5b853567ffffffffffffffff808211156110ae57600080fd5b6110ba89838a0161101d565b909750955060208801359150808211156110d357600080fd5b506110e08882890161101d565b90945092505060408601356110f481611069565b809150509295509295909350565b60008060006060848603121561111757600080fd5b833561112281611069565b9250602084013561113281611069565b929592945050506040919091013590565b6000806000806040858703121561115957600080fd5b843567ffffffffffffffff8082111561117157600080fd5b61117d8883890161101d565b9096509450602087013591508082111561119657600080fd5b506111a38782880161101d565b95989497509550505050565b600080604083850312156111c257600080fd5b82356111cd81611069565b946020939093013593505050565b6000602082840312156111ed57600080fd5b8135610ea181611069565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b6020808252601590820152740d2dcecc2d8d2c85ac2e4e4c2f2e65ad8cadccee8d605b1b604082015260600190565b6000602082840312156112ad57600080fd5b815160ff81168114610ea157600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561130f5781600019048211156112f5576112f56112be565b8085161561130257918102915b93841c93908002906112d9565b509250929050565b600082611326575060016113b4565b81611333575060006113b4565b816001811461134957600281146113535761136f565b60019150506113b4565b60ff841115611364576113646112be565b50506001821b6113b4565b5060208310610133831016604e8410600b8410161715611392575081810a6113b4565b61139c83836112d4565b80600019048211156113b0576113b06112be565b0290505b92915050565b6000610ea160ff841683611317565b60008160001904831182151516156113e3576113e36112be565b500290565b60008261140557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611434576114346112be565b5060010190565b60006020828403121561144d57600080fd5b5051919050565b60006020828403121561146657600080fd5b81518015158114610ea157600080fd5b60005b83811015611491578181015183820152602001611479565b838111156104545750506000910152565b600082516114b4818460208701611476565b9190910192915050565b60208152600082518060208401526114dd816040850160208701611476565b601f01601f1916919091016040019291505056fea264697066735822122008d9dc20fdbbdb1c07de7cc09a3e1bc6c3f1cb8e62b374c20f621fd848003df564736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100b65760003560e01c80638d0dba001161006f5780638d0dba001461021b578063addd509914610249578063b5e9bef51461027f578063b64663841461029f578063b6aa515b146102bf578063c44014d2146102df578063f3b27bc3146102ff576100fe565b80630c340a241461013d5780635274ac3f1461017957806362c067671461019b57806380dce169146101bb57806389f74c0c146101db5780638a11a370146101fb576100fe565b366100fe5760405162461bcd60e51b81526020600482015260136024820152721c9958d95a5d994b5b9bdd0b585b1b1bddd959606a1b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b60448201526064016100f5565b34801561014957600080fd5b50600054610163906201000090046001600160a01b031681565b6040516101709190611009565b60405180910390f35b34801561018557600080fd5b5061019961019436600461107e565b610314565b005b3480156101a757600080fd5b506101996101b6366004611102565b6103b4565b3480156101c757600080fd5b50600354610163906001600160a01b031681565b3480156101e757600080fd5b506101996101f6366004611143565b6103ed565b34801561020757600080fd5b50600154610163906001600160a01b031681565b34801561022757600080fd5b5061023b6102363660046111af565b61045a565b604051908152602001610170565b34801561025557600080fd5b506101636102643660046111db565b6002602052600090815260409020546001600160a01b031681565b34801561028b57600080fd5b5061023b61029a3660046111af565b610500565b3480156102ab57600080fd5b5061023b6102ba366004611102565b610595565b3480156102cb57600080fd5b506101996102da3660046111db565b6105b7565b3480156102eb57600080fd5b506101996102fa3660046111db565b61065c565b34801561030b57600080fd5b50610199610753565b600054610100900460ff168061032d575060005460ff16155b6103495760405162461bcd60e51b81526004016100f5906111f8565b600054610100900460ff1615801561036b576000805461ffff19166101011790555b610373610821565b61037f868686866108d7565b600380546001600160a01b0319166001600160a01b03841617905580156103ac576000805461ff00191690555b505050505050565b6103bc610ab3565b6001600160a01b0383166103d9576103d48282610ae6565b505050565b6103d46001600160a01b0384168383610bff565b6000546001600160a01b036201000090910416331461041e5760405162461bcd60e51b81526004016100f590611246565b821580159061042c57508015155b6104485760405162461bcd60e51b81526004016100f59061126c565b610454848484846108d7565b50505050565b60008061046684610c51565b9050836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a157600080fd5b505afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d9919061129b565b6104e490600a6113ba565b6104ee82856113c9565b6104f891906113e8565b949350505050565b60008061050c84610c51565b905080846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610580919061129b565b61058b90600a6113ba565b6104ee90856113c9565b6000806105a2858461045a565b90506105ae8482610500565b95945050505050565b6000546001600160a01b03620100009091041633146105e85760405162461bcd60e51b81526004016100f590611246565b6001600160a01b03811661063a5760405162461bcd60e51b815260206004820152601960248201527870726f706f7365642d676f7665726e6f722d69732d7a65726f60381b60448201526064016100f5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b036201000090910416331461068d5760405162461bcd60e51b81526004016100f590611246565b6003546001600160a01b039081169082168114156106ed5760405162461bcd60e51b815260206004820152601d60248201527f6e65772d6f7261636c652d69732d73616d652d61732d63757272656e7400000060448201526064016100f5565b604080516001600160a01b038084168252841660208201527f91f0076b6a62d3cb799d1ebce63c4e8d031ed0a90443b8f6172b391682b58f4b910160405180910390a150600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146107a95760405162461bcd60e51b81526020600482015260196024820152783737ba16ba343296b83937b837b9b2b216b3b7bb32b93737b960391b60448201526064016100f5565b600154600080546040516001600160a01b039384169362010000909204909116917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d091a3600180546000805462010000600160b01b0319166001600160a01b03831662010000021790556001600160a01b0319169055565b600054610100900460ff168061083a575060005460ff16155b6108565760405162461bcd60e51b81526004016100f5906111f8565b600054610100900460ff16158015610878576000805461ffff19166101011790555b6000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a35080156108d4576000805461ff00191690555b50565b828181146108f75760405162461bcd60e51b81526004016100f59061126c565b60005b818110156103ac5760008686838181106109165761091661140a565b905060200201602081019061092b91906111db565b90506001600160a01b03811661097f5760405162461bcd60e51b8152602060048201526019602482015278616e2d61737365742d6861732d6e756c6c2d6164647265737360381b60448201526064016100f5565b6001600160a01b03808216600090815260026020526040812054909116908686858181106109af576109af61140a565b90506020020160208101906109c491906111db565b9050816001600160a01b0316816001600160a01b03161415610a285760405162461bcd60e51b815260206004820152601c60248201527f612d6e65772d6f7261636c652d73616d652d61732d63757272656e740000000060448201526064016100f5565b604080516001600160a01b038581168252848116602083015283168183015290517fa18d4edc0f9c89f7feb41d0243d7f20bf44c5b426ede1cc1014a31ab8eb724899181900360600190a16001600160a01b03928316600090815260026020526040902080546001600160a01b03191691909316179091555080610aab81611420565b9150506108fa565b6000546001600160a01b0362010000909104163314610ae45760405162461bcd60e51b81526004016100f590611246565b565b80471015610b365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100f5565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b83576040519150601f19603f3d011682016040523d82523d6000602084013e610b88565b606091505b50509050806103d45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100f5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103d4908490610dbd565b6001600160a01b038082166000908152600260205260408120549091168015610cf7576040516307ee40bf60e01b81526001600160a01b038216906307ee40bf90610ca0908690600401611009565b60206040518083038186803b158015610cb857600080fd5b505afa158015610ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf0919061143b565b9150610d77565b6003546001600160a01b031615610d38576003546040516307ee40bf60e01b81526001600160a01b03909116906307ee40bf90610ca0908690600401611009565b60405162461bcd60e51b815260206004820152601460248201527361737365742d776974686f75742d6f7261636c6560601b60448201526064016100f5565b60008211610db75760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642d707269636560981b60448201526064016100f5565b50919050565b6000610e12826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e8f9092919063ffffffff16565b8051909150156103d45780806020019051810190610e309190611454565b6103d45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f5565b6060610e9e8484600085610ea8565b90505b9392505050565b606082471015610f095760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f5565b843b610f575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f5565b600080866001600160a01b03168587604051610f7391906114a2565b60006040518083038185875af1925050503d8060008114610fb0576040519150601f19603f3d011682016040523d82523d6000602084013e610fb5565b606091505b5091509150610fc5828286610fd0565b979650505050505050565b60608315610fdf575081610ea1565b825115610fef5782518084602001fd5b8160405162461bcd60e51b81526004016100f591906114be565b6001600160a01b0391909116815260200190565b60008083601f84011261102f57600080fd5b50813567ffffffffffffffff81111561104757600080fd5b6020830191508360208260051b850101111561106257600080fd5b9250929050565b6001600160a01b03811681146108d457600080fd5b60008060008060006060868803121561109657600080fd5b853567ffffffffffffffff808211156110ae57600080fd5b6110ba89838a0161101d565b909750955060208801359150808211156110d357600080fd5b506110e08882890161101d565b90945092505060408601356110f481611069565b809150509295509295909350565b60008060006060848603121561111757600080fd5b833561112281611069565b9250602084013561113281611069565b929592945050506040919091013590565b6000806000806040858703121561115957600080fd5b843567ffffffffffffffff8082111561117157600080fd5b61117d8883890161101d565b9096509450602087013591508082111561119657600080fd5b506111a38782880161101d565b95989497509550505050565b600080604083850312156111c257600080fd5b82356111cd81611069565b946020939093013593505050565b6000602082840312156111ed57600080fd5b8135610ea181611069565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b6020808252601590820152740d2dcecc2d8d2c85ac2e4e4c2f2e65ad8cadccee8d605b1b604082015260600190565b6000602082840312156112ad57600080fd5b815160ff81168114610ea157600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561130f5781600019048211156112f5576112f56112be565b8085161561130257918102915b93841c93908002906112d9565b509250929050565b600082611326575060016113b4565b81611333575060006113b4565b816001811461134957600281146113535761136f565b60019150506113b4565b60ff841115611364576113646112be565b50506001821b6113b4565b5060208310610133831016604e8410600b8410161715611392575081810a6113b4565b61139c83836112d4565b80600019048211156113b0576113b06112be565b0290505b92915050565b6000610ea160ff841683611317565b60008160001904831182151516156113e3576113e36112be565b500290565b60008261140557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611434576114346112be565b5060010190565b60006020828403121561144d57600080fd5b5051919050565b60006020828403121561146657600080fd5b81518015158114610ea157600080fd5b60005b83811015611491578181015183820152602001611479565b838111156104545750506000910152565b600082516114b4818460208701611476565b9190910192915050565b60208152600082518060208401526114dd816040850160208701611476565b601f01601f1916919091016040019291505056fea264697066735822122008d9dc20fdbbdb1c07de7cc09a3e1bc6c3f1cb8e62b374c20f621fd848003df564736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptGovernorship()": {
        "details": "Allows new governor to accept governorship of the contract."
      },
      "addOrUpdate(address[],address[])": {
        "params": {
          "_assets": "The ERC20 asset addresses to link to `_oracles`",
          "_oracles": "The `IOracle` contracts to be assigned to `_assets`"
        }
      },
      "quote(address,address,uint256)": {
        "params": {
          "_amountIn": "The amount to convert from",
          "_assetIn": "The asset to convert from",
          "_assetOut": "The asset to convert to"
        },
        "returns": {
          "_amountOut": "The converted amount"
        }
      },
      "quoteTokenToUsd(address,uint256)": {
        "params": {
          "_amount": "The amount to convert",
          "_asset": "The asset's address"
        },
        "returns": {
          "_amountInUsd": "The amount in USD (18 decimals)"
        }
      },
      "quoteUsdToToken(address,uint256)": {
        "params": {
          "_amountInUsd": "The amount in USD (18 decimals)",
          "_asset": "The asset's address"
        },
        "returns": {
          "_amount": "The converted amount"
        }
      },
      "setDefaultOracle(address)": {
        "details": "We allow null address in order to turn off the default oracle",
        "params": {
          "_newDefaultOracle": "The new default oracle contract"
        }
      },
      "sweep(address,address,uint256)": {
        "params": {
          "_amount": "The amount to send",
          "_to": "The recipient of the transfer",
          "_token": "The token to transfer"
        }
      },
      "transferGovernorship(address)": {
        "details": "Transfers governorship of the contract to a new account (`proposedGovernor`). Can only be called by the current owner."
      }
    },
    "title": "The Master oracle that is called by `Controller`",
    "version": 1
  },
  "userdoc": {
    "events": {
      "DefaultOracleUpdated(address,address)": {
        "notice": "Event emitted when the default oracle is updated"
      },
      "OracleUpdated(address,address,address)": {
        "notice": "Event emitted when a asset's oracle is updated"
      }
    },
    "kind": "user",
    "methods": {
      "addOrUpdate(address[],address[])": {
        "notice": "Add or update token oracles"
      },
      "defaultOracle()": {
        "notice": "The Default/fallback oracle"
      },
      "oracles(address)": {
        "notice": "Maps asset addresses to oracle contracts"
      },
      "quote(address,address,uint256)": {
        "notice": "Convert assets' amounts"
      },
      "quoteTokenToUsd(address,uint256)": {
        "notice": "Convert asset's amount to USD"
      },
      "quoteUsdToToken(address,uint256)": {
        "notice": "Convert USD to asset's amount"
      },
      "setDefaultOracle(address)": {
        "notice": "Update the default oracle contract"
      },
      "sweep(address,address,uint256)": {
        "notice": "ERC20 recovery in case of stuck tokens due direct transfers to the contract address."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7131,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 7134,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5950,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "governor",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5952,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "proposedGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 13327,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "oracles",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_contract(IOracle)11256)"
      },
      {
        "astId": 13331,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "defaultOracle",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IOracle)11256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IOracle)11256": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IOracle)11256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IOracle)",
        "numberOfBytes": "32",
        "value": "t_contract(IOracle)11256"
      }
    }
  }
}