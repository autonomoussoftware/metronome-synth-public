{
  "address": "0x4661407fC224E5432D7f528a20EF8906E453A8f3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oldOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "DefaultOracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oldOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "OracleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposedGovernor",
          "type": "address"
        }
      ],
      "name": "UpdatedGovernor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernorship",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        },
        {
          "internalType": "contract IOracle[]",
          "name": "_oracles",
          "type": "address[]"
        }
      ],
      "name": "addOrUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_assetIn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_assetOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        }
      ],
      "name": "convert",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountInUsd",
          "type": "uint256"
        }
      ],
      "name": "convertFromUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "convertToUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountInUsd",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOracle",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        },
        {
          "internalType": "contract IOracle[]",
          "name": "_oracles",
          "type": "address[]"
        },
        {
          "internalType": "contract IOracle",
          "name": "_defaultOracle",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oracles",
      "outputs": [
        {
          "internalType": "contract IOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOracle",
          "name": "_newDefaultOracle",
          "type": "address"
        }
      ],
      "name": "setDefaultOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposedGovernor",
          "type": "address"
        }
      ],
      "name": "transferGovernorship",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3cbc421c7587290a15943766e5b47731be2b2470eca9f13a564dbb9771e2c9ef",
  "receipt": {
    "to": null,
    "from": "0xF5F5195cF6998c57C651f9f0bBFA7cFC72a6FaC1",
    "contractAddress": "0x4661407fC224E5432D7f528a20EF8906E453A8f3",
    "transactionIndex": 17,
    "gasUsed": "912312",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000080800000000000000000000000000000000000000000000000000000000000800000000000000000000000000400000000000000000004000000000000000000000000000000000000020000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000008000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xde85baba5eec6b7e499f5bdd219c25b66ee1d7485b388178eedb12f1b39c55aa",
    "transactionHash": "0x3cbc421c7587290a15943766e5b47731be2b2470eca9f13a564dbb9771e2c9ef",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 12442224,
        "transactionHash": "0x3cbc421c7587290a15943766e5b47731be2b2470eca9f13a564dbb9771e2c9ef",
        "address": "0x4661407fC224E5432D7f528a20EF8906E453A8f3",
        "topics": [
          "0xd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5f5195cf6998c57c651f9f0bbfa7cfc72a6fac1"
        ],
        "data": "0x",
        "logIndex": 91,
        "blockHash": "0xde85baba5eec6b7e499f5bdd219c25b66ee1d7485b388178eedb12f1b39c55aa"
      }
    ],
    "blockNumber": 12442224,
    "cumulativeGasUsed": "5662112",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0077a7bd8b2b7c639ec050e1f3a43041",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oldOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"DefaultOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oldOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedGovernor\",\"type\":\"address\"}],\"name\":\"UpdatedGovernor\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"contract IOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"}],\"name\":\"addOrUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountInUsd\",\"type\":\"uint256\"}],\"name\":\"convertFromUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convertToUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"contract IOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"},{\"internalType\":\"contract IOracle\",\"name\":\"_defaultOracle\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"_newDefaultOracle\",\"type\":\"address\"}],\"name\":\"setDefaultOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposedGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptGovernorship()\":{\"details\":\"Allows new governor to accept governorship of the contract.\"},\"addOrUpdate(address[],address[])\":{\"params\":{\"_assets\":\"The ERC20 asset addresses to link to `_oracles`\",\"_oracles\":\"The `IOracle` contracts to be assigned to `_assets`\"}},\"convert(address,address,uint256)\":{\"params\":{\"_amountIn\":\"The amount to convert from\",\"_assetIn\":\"The asset to convert from\",\"_assetOut\":\"The asset to convert to\"},\"returns\":{\"_amountOut\":\"The converted amount\"}},\"convertFromUsd(address,uint256)\":{\"params\":{\"_amountInUsd\":\"The amount in USD (18 decimals)\",\"_asset\":\"The asset's address\"},\"returns\":{\"_amount\":\"The converted amount\"}},\"convertToUsd(address,uint256)\":{\"params\":{\"_amount\":\"The amount to convert\",\"_asset\":\"The asset's address\"},\"returns\":{\"_amountInUsd\":\"The amount in USD (18 decimals)\"}},\"setDefaultOracle(address)\":{\"details\":\"We allow null address in order to turn off the default oracle\",\"params\":{\"_newDefaultOracle\":\"The new default oracle contract\"}},\"transferGovernorship(address)\":{\"details\":\"Transfers governorship of the contract to a new account (`proposedGovernor`). Can only be called by the current owner.\"}},\"title\":\"The Master oracle that is called by `Controller`\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultOracleUpdated(address,address)\":{\"notice\":\"Event emitted when the default oracle is updated\"},\"OracleUpdated(address,address,address)\":{\"notice\":\"Event emitted when a asset's oracle is updated\"}},\"kind\":\"user\",\"methods\":{\"addOrUpdate(address[],address[])\":{\"notice\":\"Add or update token oracles\"},\"convert(address,address,uint256)\":{\"notice\":\"Convert assets' amounts\"},\"convertFromUsd(address,uint256)\":{\"notice\":\"Convert USD to asset's amount\"},\"convertToUsd(address,uint256)\":{\"notice\":\"Convert asset's amount to USD\"},\"defaultOracle()\":{\"notice\":\"The Default/fallback oracle\"},\"oracles(address)\":{\"notice\":\"Maps asset addresses to oracle contracts\"},\"setDefaultOracle(address)\":{\"notice\":\"Update the default oracle contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/MasterOracle.sol\":\"MasterOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/access/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../dependencies/openzeppelin/utils/Context.sol\\\";\\nimport \\\"../dependencies/openzeppelin/proxy/utils/Initializable.sol\\\";\\nimport \\\"../interface/IGovernable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (governor) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the governor account will be the one that deploys the contract. This\\n * can later be changed with {transferGovernorship}.\\n *\\n */\\nabstract contract Governable is IGovernable, Context, Initializable {\\n    address public governor;\\n    address private proposedGovernor;\\n\\n    event UpdatedGovernor(address indexed previousGovernor, address indexed proposedGovernor);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial governor.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        governor = msgSender;\\n        emit UpdatedGovernor(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev If inheriting child is using proxy then child contract can use\\n     * __Governable_init() function to initialization this contract\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __Governable_init() internal initializer {\\n        address msgSender = _msgSender();\\n        governor = msgSender;\\n        emit UpdatedGovernor(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the governor.\\n     */\\n    modifier onlyGovernor() {\\n        require(governor == _msgSender(), \\\"not-governor\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers governorship of the contract to a new account (`proposedGovernor`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferGovernorship(address _proposedGovernor) external onlyGovernor {\\n        require(_proposedGovernor != address(0), \\\"proposed-governor-is-zero\\\");\\n        proposedGovernor = _proposedGovernor;\\n    }\\n\\n    /**\\n     * @dev Allows new governor to accept governorship of the contract.\\n     */\\n    function acceptGovernorship() external {\\n        require(proposedGovernor == _msgSender(), \\\"not-the-proposed-governor\\\");\\n        emit UpdatedGovernor(governor, proposedGovernor);\\n        governor = proposedGovernor;\\n        proposedGovernor = address(0);\\n    }\\n}\\n\",\"keccak256\":\"0x4dd52143db9b973340b6c5718e112bda0a926feffc5900994c136b8576e96d49\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"contracts/dependencies/openzeppelin/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/interface/IGovernable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @notice Governable interface\\n */\\ninterface IGovernable {\\n    function governor() external view returns (address _governor);\\n\\n    function transferGovernorship(address _proposedGovernor) external;\\n}\\n\",\"keccak256\":\"0xbe84461adf33aec1bf31b6d84a5380aaeb791de9a4b95346dd8270dc6632984e\",\"license\":\"MIT\"},\"contracts/interface/oracle/IMasterOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../dependencies/openzeppelin/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IPriceProvider.sol\\\";\\n\\ninterface IMasterOracle {\\n    function convertToUsd(IERC20 _asset, uint256 _amount) external view returns (uint256 _amountInUsd);\\n\\n    function convertFromUsd(IERC20 _asset, uint256 _amountInUsd) external view returns (uint256 _amount);\\n\\n    function convert(\\n        IERC20 _assetIn,\\n        IERC20 _assetOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256 _amountOut);\\n}\\n\",\"keccak256\":\"0x4a8d2418b6c1f6bacde194b7a77f101688c8a10313ac974bc055824fbc51bdc8\",\"license\":\"MIT\"},\"contracts/interface/oracle/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../../dependencies/openzeppelin/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IPriceProvider.sol\\\";\\n\\ninterface IOracle {\\n    function getPriceInUsd(IERC20 _asset) external view returns (uint256 _priceInUsd);\\n}\\n\",\"keccak256\":\"0x8fca6035e60e9efe864c2195c9aec9fc7889c0aa4cc9f0639fbe4ec59f170a73\",\"license\":\"MIT\"},\"contracts/interface/oracle/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\ninterface IPriceProvider {\\n    function update(bytes calldata _assetData) external;\\n\\n    function getPriceInUsd(bytes calldata _assetData)\\n        external\\n        view\\n        returns (uint256 _priceInUsd, uint256 _lastUpdatedAt);\\n}\\n\",\"keccak256\":\"0xb9a85340ae4de861a6f0a8c591d28272176e44198c03e214b0f41db7dab4a4ff\",\"license\":\"MIT\"},\"contracts/oracle/MasterOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../dependencies/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../access/Governable.sol\\\";\\nimport \\\"../interface/oracle/IMasterOracle.sol\\\";\\nimport \\\"../interface/oracle/IOracle.sol\\\";\\n\\n/**\\n * @title The Master oracle that is called by `Controller`\\n */\\ncontract MasterOracle is Initializable, IMasterOracle, Governable {\\n    /**\\n     * @notice Maps asset addresses to oracle contracts\\n     */\\n    mapping(address => IOracle) public oracles;\\n\\n    /**\\n     * @notice The Default/fallback oracle\\n     */\\n    IOracle public defaultOracle;\\n\\n    /**\\n     * @notice Event emitted when the default oracle is updated\\n     */\\n    event DefaultOracleUpdated(IOracle oldOracle, IOracle newOracle);\\n\\n    /**\\n     * @notice Event emitted when a asset's oracle is updated\\n     */\\n    event OracleUpdated(address asset, IOracle oldOracle, IOracle newOracle);\\n\\n    function initialize(\\n        address[] calldata _assets,\\n        IOracle[] calldata _oracles,\\n        IOracle _defaultOracle\\n    ) external initializer {\\n        __Governable_init();\\n\\n        _updateOracles(_assets, _oracles);\\n        defaultOracle = _defaultOracle;\\n    }\\n\\n    /**\\n     * @notice Sets `_oracles` for `_assets`.\\n     * @param _assets The ERC20 asset addresses to link to `_oracles`.\\n     * @param _oracles The `IOracle` contracts to be assigned to `_assets`.\\n     * @dev We allow null address inside of the `_oracles` array in order to turn off oracle for a given asset\\n     */\\n    function _updateOracles(address[] calldata _assets, IOracle[] calldata _oracles) private {\\n        uint256 _assetsLength = _assets.length;\\n        require(_assetsLength == _oracles.length, \\\"invalid-arrays-length\\\");\\n\\n        for (uint256 i = 0; i < _assetsLength; i++) {\\n            address _asset = _assets[i];\\n            require(_asset != address(0), \\\"an-asset-has-null-address\\\");\\n            IOracle _currentOracle = oracles[_asset];\\n            IOracle _newOracle = _oracles[i];\\n            require(_newOracle != _currentOracle, \\\"a-new-oracle-same-as-current\\\");\\n            emit OracleUpdated(_asset, _currentOracle, _newOracle);\\n            oracles[_asset] = _newOracle;\\n        }\\n    }\\n\\n    /**\\n     * @notice Add or update token oracles\\n     * @param _assets The ERC20 asset addresses to link to `_oracles`\\n     * @param _oracles The `IOracle` contracts to be assigned to `_assets`\\n     */\\n    function addOrUpdate(address[] calldata _assets, IOracle[] calldata _oracles) external onlyGovernor {\\n        require(_assets.length > 0 && _oracles.length > 0, \\\"invalid-arrays-length\\\");\\n        _updateOracles(_assets, _oracles);\\n    }\\n\\n    /**\\n     * @notice Update the default oracle contract\\n     * @param _newDefaultOracle The new default oracle contract\\n     * @dev We allow null address in order to turn off the default oracle\\n     */\\n    function setDefaultOracle(IOracle _newDefaultOracle) external onlyGovernor {\\n        IOracle _currentDefaultOracle = defaultOracle;\\n        require(_newDefaultOracle != _currentDefaultOracle, \\\"new-oracle-is-same-as-current\\\");\\n        emit DefaultOracleUpdated(_currentDefaultOracle, _newDefaultOracle);\\n        defaultOracle = _newDefaultOracle;\\n    }\\n\\n    /**\\n     * @notice Get asset's USD price\\n     * @param _asset The asset's address\\n     * @return _priceInUsd The USD price (18 decimals)\\n     */\\n    function _getPriceInUsd(IERC20 _asset) private view returns (uint256 _priceInUsd) {\\n        IOracle _oracle = oracles[address(_asset)];\\n\\n        if (address(_oracle) != address(0)) {\\n            _priceInUsd = _oracle.getPriceInUsd(_asset);\\n        } else if (address(defaultOracle) != address(0)) {\\n            _priceInUsd = defaultOracle.getPriceInUsd(_asset);\\n        } else {\\n            revert(\\\"asset-without-oracle\\\");\\n        }\\n\\n        require(_priceInUsd > 0, \\\"invalid-price\\\");\\n    }\\n\\n    /**\\n     * @notice Convert asset's amount to USD\\n     * @param _asset The asset's address\\n     * @param _amount The amount to convert\\n     * @return _amountInUsd The amount in USD (18 decimals)\\n     */\\n    function convertToUsd(IERC20 _asset, uint256 _amount) public view returns (uint256 _amountInUsd) {\\n        uint256 _priceInUsd = _getPriceInUsd(_asset);\\n        _amountInUsd = (_amount * _priceInUsd) / 10**IERC20Metadata(address(_asset)).decimals();\\n    }\\n\\n    /**\\n     * @notice Convert USD to asset's amount\\n     * @param _asset The asset's address\\n     * @param _amountInUsd The amount in USD (18 decimals)\\n     * @return _amount The converted amount\\n     */\\n    function convertFromUsd(IERC20 _asset, uint256 _amountInUsd) public view returns (uint256 _amount) {\\n        uint256 _priceInUsd = _getPriceInUsd(_asset);\\n        _amount = (_amountInUsd * 10**IERC20Metadata(address(_asset)).decimals()) / _priceInUsd;\\n    }\\n\\n    /**\\n     * @notice Convert assets' amounts\\n     * @param _assetIn The asset to convert from\\n     * @param _assetOut The asset to convert to\\n     * @param _amountIn The amount to convert from\\n     * @return _amountOut The converted amount\\n     */\\n    function convert(\\n        IERC20 _assetIn,\\n        IERC20 _assetOut,\\n        uint256 _amountIn\\n    ) external view returns (uint256 _amountOut) {\\n        uint256 _amountInUsd = convertToUsd(_assetIn, _amountIn);\\n        _amountOut = convertFromUsd(_assetOut, _amountInUsd);\\n    }\\n}\\n\",\"keccak256\":\"0xa838672f2d8a74b7335e7f77509fdebe5dfb7b0a369a827cb1409f252393dab4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a350610f198061006a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806389f74c0c1161007157806389f74c0c14610139578063addd50991461014c578063b6aa515b14610175578063c44014d214610188578063ee9579961461019b578063f3b27bc3146101ae57600080fd5b80630c340a24146100ae578063248391ff146100dd5780635274ac3f146100fe57806357f1915d1461011357806380dce16914610126575b600080fd5b6000546100c7906201000090046001600160a01b031681565b6040516100d49190610a91565b60405180910390f35b6100f06100eb366004610aba565b6101b6565b6040519081526020016100d4565b61011161010c366004610b47565b6101d8565b005b6100f0610121366004610bcb565b610281565b6003546100c7906001600160a01b031681565b610111610147366004610bf7565b610328565b6100c761015a366004610c63565b6002602052600090815260409020546001600160a01b031681565b610111610183366004610c63565b610395565b610111610196366004610c63565b61043a565b6100f06101a9366004610bcb565b610531565b6101116105c5565b6000806101c38584610531565b90506101cf8482610281565b95945050505050565b600054610100900460ff16806101f1575060005460ff16155b6102165760405162461bcd60e51b815260040161020d90610c87565b60405180910390fd5b600054610100900460ff16158015610238576000805461ffff19166101011790555b610240610693565b61024c86868686610749565b600380546001600160a01b0319166001600160a01b0384161790558015610279576000805461ff00191690555b505050505050565b60008061028d84610925565b905080846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610cd5565b61030c90600a610df4565b6103169085610e03565b6103209190610e22565b949350505050565b6000546001600160a01b03620100009091041633146103595760405162461bcd60e51b815260040161020d90610e44565b821580159061036757508015155b6103835760405162461bcd60e51b815260040161020d90610e6a565b61038f84848484610749565b50505050565b6000546001600160a01b03620100009091041633146103c65760405162461bcd60e51b815260040161020d90610e44565b6001600160a01b0381166104185760405162461bcd60e51b815260206004820152601960248201527870726f706f7365642d676f7665726e6f722d69732d7a65726f60381b604482015260640161020d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b036201000090910416331461046b5760405162461bcd60e51b815260040161020d90610e44565b6003546001600160a01b039081169082168114156104cb5760405162461bcd60e51b815260206004820152601d60248201527f6e65772d6f7261636c652d69732d73616d652d61732d63757272656e74000000604482015260640161020d565b604080516001600160a01b038084168252841660208201527f91f0076b6a62d3cb799d1ebce63c4e8d031ed0a90443b8f6172b391682b58f4b910160405180910390a150600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008061053d84610925565b9050836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610cd5565b6105bb90600a610df4565b6103168285610e03565b6001546001600160a01b0316331461061b5760405162461bcd60e51b81526020600482015260196024820152783737ba16ba343296b83937b837b9b2b216b3b7bb32b93737b960391b604482015260640161020d565b600154600080546040516001600160a01b039384169362010000909204909116917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d091a3600180546000805462010000600160b01b0319166001600160a01b03831662010000021790556001600160a01b0319169055565b600054610100900460ff16806106ac575060005460ff16155b6106c85760405162461bcd60e51b815260040161020d90610c87565b600054610100900460ff161580156106ea576000805461ffff19166101011790555b6000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a3508015610746576000805461ff00191690555b50565b828181146107695760405162461bcd60e51b815260040161020d90610e6a565b60005b8181101561027957600086868381811061078857610788610e99565b905060200201602081019061079d9190610c63565b90506001600160a01b0381166107f15760405162461bcd60e51b8152602060048201526019602482015278616e2d61737365742d6861732d6e756c6c2d6164647265737360381b604482015260640161020d565b6001600160a01b038082166000908152600260205260408120549091169086868581811061082157610821610e99565b90506020020160208101906108369190610c63565b9050816001600160a01b0316816001600160a01b0316141561089a5760405162461bcd60e51b815260206004820152601c60248201527f612d6e65772d6f7261636c652d73616d652d61732d63757272656e7400000000604482015260640161020d565b604080516001600160a01b038581168252848116602083015283168183015290517fa18d4edc0f9c89f7feb41d0243d7f20bf44c5b426ede1cc1014a31ab8eb724899181900360600190a16001600160a01b03928316600090815260026020526040902080546001600160a01b0319169190931617909155508061091d81610eaf565b91505061076c565b6001600160a01b0380821660009081526002602052604081205490911680156109cb576040516307ee40bf60e01b81526001600160a01b038216906307ee40bf90610974908690600401610a91565b60206040518083038186803b15801561098c57600080fd5b505afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190610eca565b9150610a4b565b6003546001600160a01b031615610a0c576003546040516307ee40bf60e01b81526001600160a01b03909116906307ee40bf90610974908690600401610a91565b60405162461bcd60e51b815260206004820152601460248201527361737365742d776974686f75742d6f7261636c6560601b604482015260640161020d565b60008211610a8b5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642d707269636560981b604482015260640161020d565b50919050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461074657600080fd5b600080600060608486031215610acf57600080fd5b8335610ada81610aa5565b92506020840135610aea81610aa5565b929592945050506040919091013590565b60008083601f840112610b0d57600080fd5b50813567ffffffffffffffff811115610b2557600080fd5b6020830191508360208260051b8501011115610b4057600080fd5b9250929050565b600080600080600060608688031215610b5f57600080fd5b853567ffffffffffffffff80821115610b7757600080fd5b610b8389838a01610afb565b90975095506020880135915080821115610b9c57600080fd5b50610ba988828901610afb565b9094509250506040860135610bbd81610aa5565b809150509295509295909350565b60008060408385031215610bde57600080fd5b8235610be981610aa5565b946020939093013593505050565b60008060008060408587031215610c0d57600080fd5b843567ffffffffffffffff80821115610c2557600080fd5b610c3188838901610afb565b90965094506020870135915080821115610c4a57600080fd5b50610c5787828801610afb565b95989497509550505050565b600060208284031215610c7557600080fd5b8135610c8081610aa5565b9392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215610ce757600080fd5b815160ff81168114610c8057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d49578160001904821115610d2f57610d2f610cf8565b80851615610d3c57918102915b93841c9390800290610d13565b509250929050565b600082610d6057506001610dee565b81610d6d57506000610dee565b8160018114610d835760028114610d8d57610da9565b6001915050610dee565b60ff841115610d9e57610d9e610cf8565b50506001821b610dee565b5060208310610133831016604e8410600b8410161715610dcc575081810a610dee565b610dd68383610d0e565b8060001904821115610dea57610dea610cf8565b0290505b92915050565b6000610c8060ff841683610d51565b6000816000190483118215151615610e1d57610e1d610cf8565b500290565b600082610e3f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b6020808252601590820152740d2dcecc2d8d2c85ac2e4e4c2f2e65ad8cadccee8d605b1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ec357610ec3610cf8565b5060010190565b600060208284031215610edc57600080fd5b505191905056fea264697066735822122066314e1b33ead291b6db8f44758d4e3f4dde2521c6511a30f29abb7a7f2340df64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806389f74c0c1161007157806389f74c0c14610139578063addd50991461014c578063b6aa515b14610175578063c44014d214610188578063ee9579961461019b578063f3b27bc3146101ae57600080fd5b80630c340a24146100ae578063248391ff146100dd5780635274ac3f146100fe57806357f1915d1461011357806380dce16914610126575b600080fd5b6000546100c7906201000090046001600160a01b031681565b6040516100d49190610a91565b60405180910390f35b6100f06100eb366004610aba565b6101b6565b6040519081526020016100d4565b61011161010c366004610b47565b6101d8565b005b6100f0610121366004610bcb565b610281565b6003546100c7906001600160a01b031681565b610111610147366004610bf7565b610328565b6100c761015a366004610c63565b6002602052600090815260409020546001600160a01b031681565b610111610183366004610c63565b610395565b610111610196366004610c63565b61043a565b6100f06101a9366004610bcb565b610531565b6101116105c5565b6000806101c38584610531565b90506101cf8482610281565b95945050505050565b600054610100900460ff16806101f1575060005460ff16155b6102165760405162461bcd60e51b815260040161020d90610c87565b60405180910390fd5b600054610100900460ff16158015610238576000805461ffff19166101011790555b610240610693565b61024c86868686610749565b600380546001600160a01b0319166001600160a01b0384161790558015610279576000805461ff00191690555b505050505050565b60008061028d84610925565b905080846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610cd5565b61030c90600a610df4565b6103169085610e03565b6103209190610e22565b949350505050565b6000546001600160a01b03620100009091041633146103595760405162461bcd60e51b815260040161020d90610e44565b821580159061036757508015155b6103835760405162461bcd60e51b815260040161020d90610e6a565b61038f84848484610749565b50505050565b6000546001600160a01b03620100009091041633146103c65760405162461bcd60e51b815260040161020d90610e44565b6001600160a01b0381166104185760405162461bcd60e51b815260206004820152601960248201527870726f706f7365642d676f7665726e6f722d69732d7a65726f60381b604482015260640161020d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b036201000090910416331461046b5760405162461bcd60e51b815260040161020d90610e44565b6003546001600160a01b039081169082168114156104cb5760405162461bcd60e51b815260206004820152601d60248201527f6e65772d6f7261636c652d69732d73616d652d61732d63757272656e74000000604482015260640161020d565b604080516001600160a01b038084168252841660208201527f91f0076b6a62d3cb799d1ebce63c4e8d031ed0a90443b8f6172b391682b58f4b910160405180910390a150600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008061053d84610925565b9050836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610cd5565b6105bb90600a610df4565b6103168285610e03565b6001546001600160a01b0316331461061b5760405162461bcd60e51b81526020600482015260196024820152783737ba16ba343296b83937b837b9b2b216b3b7bb32b93737b960391b604482015260640161020d565b600154600080546040516001600160a01b039384169362010000909204909116917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d091a3600180546000805462010000600160b01b0319166001600160a01b03831662010000021790556001600160a01b0319169055565b600054610100900460ff16806106ac575060005460ff16155b6106c85760405162461bcd60e51b815260040161020d90610c87565b600054610100900460ff161580156106ea576000805461ffff19166101011790555b6000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a3508015610746576000805461ff00191690555b50565b828181146107695760405162461bcd60e51b815260040161020d90610e6a565b60005b8181101561027957600086868381811061078857610788610e99565b905060200201602081019061079d9190610c63565b90506001600160a01b0381166107f15760405162461bcd60e51b8152602060048201526019602482015278616e2d61737365742d6861732d6e756c6c2d6164647265737360381b604482015260640161020d565b6001600160a01b038082166000908152600260205260408120549091169086868581811061082157610821610e99565b90506020020160208101906108369190610c63565b9050816001600160a01b0316816001600160a01b0316141561089a5760405162461bcd60e51b815260206004820152601c60248201527f612d6e65772d6f7261636c652d73616d652d61732d63757272656e7400000000604482015260640161020d565b604080516001600160a01b038581168252848116602083015283168183015290517fa18d4edc0f9c89f7feb41d0243d7f20bf44c5b426ede1cc1014a31ab8eb724899181900360600190a16001600160a01b03928316600090815260026020526040902080546001600160a01b0319169190931617909155508061091d81610eaf565b91505061076c565b6001600160a01b0380821660009081526002602052604081205490911680156109cb576040516307ee40bf60e01b81526001600160a01b038216906307ee40bf90610974908690600401610a91565b60206040518083038186803b15801561098c57600080fd5b505afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190610eca565b9150610a4b565b6003546001600160a01b031615610a0c576003546040516307ee40bf60e01b81526001600160a01b03909116906307ee40bf90610974908690600401610a91565b60405162461bcd60e51b815260206004820152601460248201527361737365742d776974686f75742d6f7261636c6560601b604482015260640161020d565b60008211610a8b5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642d707269636560981b604482015260640161020d565b50919050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461074657600080fd5b600080600060608486031215610acf57600080fd5b8335610ada81610aa5565b92506020840135610aea81610aa5565b929592945050506040919091013590565b60008083601f840112610b0d57600080fd5b50813567ffffffffffffffff811115610b2557600080fd5b6020830191508360208260051b8501011115610b4057600080fd5b9250929050565b600080600080600060608688031215610b5f57600080fd5b853567ffffffffffffffff80821115610b7757600080fd5b610b8389838a01610afb565b90975095506020880135915080821115610b9c57600080fd5b50610ba988828901610afb565b9094509250506040860135610bbd81610aa5565b809150509295509295909350565b60008060408385031215610bde57600080fd5b8235610be981610aa5565b946020939093013593505050565b60008060008060408587031215610c0d57600080fd5b843567ffffffffffffffff80821115610c2557600080fd5b610c3188838901610afb565b90965094506020870135915080821115610c4a57600080fd5b50610c5787828801610afb565b95989497509550505050565b600060208284031215610c7557600080fd5b8135610c8081610aa5565b9392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215610ce757600080fd5b815160ff81168114610c8057600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d49578160001904821115610d2f57610d2f610cf8565b80851615610d3c57918102915b93841c9390800290610d13565b509250929050565b600082610d6057506001610dee565b81610d6d57506000610dee565b8160018114610d835760028114610d8d57610da9565b6001915050610dee565b60ff841115610d9e57610d9e610cf8565b50506001821b610dee565b5060208310610133831016604e8410600b8410161715610dcc575081810a610dee565b610dd68383610d0e565b8060001904821115610dea57610dea610cf8565b0290505b92915050565b6000610c8060ff841683610d51565b6000816000190483118215151615610e1d57610e1d610cf8565b500290565b600082610e3f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b6020808252601590820152740d2dcecc2d8d2c85ac2e4e4c2f2e65ad8cadccee8d605b1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ec357610ec3610cf8565b5060010190565b600060208284031215610edc57600080fd5b505191905056fea264697066735822122066314e1b33ead291b6db8f44758d4e3f4dde2521c6511a30f29abb7a7f2340df64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptGovernorship()": {
        "details": "Allows new governor to accept governorship of the contract."
      },
      "addOrUpdate(address[],address[])": {
        "params": {
          "_assets": "The ERC20 asset addresses to link to `_oracles`",
          "_oracles": "The `IOracle` contracts to be assigned to `_assets`"
        }
      },
      "convert(address,address,uint256)": {
        "params": {
          "_amountIn": "The amount to convert from",
          "_assetIn": "The asset to convert from",
          "_assetOut": "The asset to convert to"
        },
        "returns": {
          "_amountOut": "The converted amount"
        }
      },
      "convertFromUsd(address,uint256)": {
        "params": {
          "_amountInUsd": "The amount in USD (18 decimals)",
          "_asset": "The asset's address"
        },
        "returns": {
          "_amount": "The converted amount"
        }
      },
      "convertToUsd(address,uint256)": {
        "params": {
          "_amount": "The amount to convert",
          "_asset": "The asset's address"
        },
        "returns": {
          "_amountInUsd": "The amount in USD (18 decimals)"
        }
      },
      "setDefaultOracle(address)": {
        "details": "We allow null address in order to turn off the default oracle",
        "params": {
          "_newDefaultOracle": "The new default oracle contract"
        }
      },
      "transferGovernorship(address)": {
        "details": "Transfers governorship of the contract to a new account (`proposedGovernor`). Can only be called by the current owner."
      }
    },
    "title": "The Master oracle that is called by `Controller`",
    "version": 1
  },
  "userdoc": {
    "events": {
      "DefaultOracleUpdated(address,address)": {
        "notice": "Event emitted when the default oracle is updated"
      },
      "OracleUpdated(address,address,address)": {
        "notice": "Event emitted when a asset's oracle is updated"
      }
    },
    "kind": "user",
    "methods": {
      "addOrUpdate(address[],address[])": {
        "notice": "Add or update token oracles"
      },
      "convert(address,address,uint256)": {
        "notice": "Convert assets' amounts"
      },
      "convertFromUsd(address,uint256)": {
        "notice": "Convert USD to asset's amount"
      },
      "convertToUsd(address,uint256)": {
        "notice": "Convert asset's amount to USD"
      },
      "defaultOracle()": {
        "notice": "The Default/fallback oracle"
      },
      "oracles(address)": {
        "notice": "Maps asset addresses to oracle contracts"
      },
      "setDefaultOracle(address)": {
        "notice": "Update the default oracle contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7181,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 7184,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 6017,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "governor",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6019,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "proposedGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 13509,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "oracles",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_contract(IOracle)11339)"
      },
      {
        "astId": 13513,
        "contract": "contracts/oracle/MasterOracle.sol:MasterOracle",
        "label": "defaultOracle",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IOracle)11339"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IOracle)11339": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IOracle)11339)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IOracle)",
        "numberOfBytes": "32",
        "value": "t_contract(IOracle)11339"
      }
    }
  }
}