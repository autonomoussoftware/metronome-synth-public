/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface IUniswapV3CrossPoolOracleInterface extends utils.Interface {
  functions: {
    "assetToAsset(address,uint256,address,uint32)": FunctionFragment;
    "assetToAssetThruRoute(address,uint256,address,uint32,address,uint24[2])": FunctionFragment;
    "assetToEth(address,uint256,uint32)": FunctionFragment;
    "ethToAsset(uint256,address,uint32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "assetToAsset"
      | "assetToAssetThruRoute"
      | "assetToEth"
      | "ethToAsset"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "assetToAsset",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "assetToAssetThruRoute",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "assetToEth",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "ethToAsset",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "assetToAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetToAssetThruRoute",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "assetToEth", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ethToAsset", data: BytesLike): Result;

  events: {};
}

export interface IUniswapV3CrossPoolOracle extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IUniswapV3CrossPoolOracleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    assetToAsset(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountOut: BigNumber }>;

    assetToAssetThruRoute(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      _routeThruToken: PromiseOrValue<string>,
      _poolFees: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountOut: BigNumber }>;

    assetToEth(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { ethAmountOut: BigNumber }>;

    ethToAsset(
      _ethAmountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amountOut: BigNumber }>;
  };

  assetToAsset(
    _tokenIn: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    _tokenOut: PromiseOrValue<string>,
    _twapPeriod: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  assetToAssetThruRoute(
    _tokenIn: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    _tokenOut: PromiseOrValue<string>,
    _twapPeriod: PromiseOrValue<BigNumberish>,
    _routeThruToken: PromiseOrValue<string>,
    _poolFees: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  assetToEth(
    _tokenIn: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    _twapPeriod: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  ethToAsset(
    _ethAmountIn: PromiseOrValue<BigNumberish>,
    _tokenOut: PromiseOrValue<string>,
    _twapPeriod: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    assetToAsset(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetToAssetThruRoute(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      _routeThruToken: PromiseOrValue<string>,
      _poolFees: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetToEth(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ethToAsset(
      _ethAmountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    assetToAsset(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetToAssetThruRoute(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      _routeThruToken: PromiseOrValue<string>,
      _poolFees: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetToEth(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ethToAsset(
      _ethAmountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    assetToAsset(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assetToAssetThruRoute(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      _routeThruToken: PromiseOrValue<string>,
      _poolFees: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assetToEth(
      _tokenIn: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ethToAsset(
      _ethAmountIn: PromiseOrValue<BigNumberish>,
      _tokenOut: PromiseOrValue<string>,
      _twapPeriod: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
