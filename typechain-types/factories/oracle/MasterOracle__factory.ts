/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MasterOracle,
  MasterOracleInterface,
} from "../../oracle/MasterOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IOracle",
        name: "oldOracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IOracle",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "DefaultOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IOracle",
        name: "oldOracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IOracle",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "OracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposedGovernor",
        type: "address",
      },
    ],
    name: "UpdatedGovernor",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "contract IOracle[]",
        name: "_oracles",
        type: "address[]",
      },
    ],
    name: "addOrUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultOracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "contract IOracle[]",
        name: "_oracles",
        type: "address[]",
      },
      {
        internalType: "contract IOracle",
        name: "_defaultOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_assetIn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_assetOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "quoteTokenToUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountInUsd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountInUsd",
        type: "uint256",
      },
    ],
    name: "quoteUsdToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "_newDefaultOracle",
        type: "address",
      },
    ],
    name: "setDefaultOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposedGovernor",
        type: "address",
      },
    ],
    name: "transferGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a3506115258061006a6000396000f3fe6080604052600436106100b65760003560e01c80638d0dba001161006f5780638d0dba001461021b578063addd509914610249578063b5e9bef51461027f578063b64663841461029f578063b6aa515b146102bf578063c44014d2146102df578063f3b27bc3146102ff576100fe565b80630c340a241461013d5780635274ac3f1461017957806362c067671461019b57806380dce169146101bb57806389f74c0c146101db5780638a11a370146101fb576100fe565b366100fe5760405162461bcd60e51b81526020600482015260136024820152721c9958d95a5d994b5b9bdd0b585b1b1bddd959606a1b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b60448201526064016100f5565b34801561014957600080fd5b50600054610163906201000090046001600160a01b031681565b6040516101709190611007565b60405180910390f35b34801561018557600080fd5b5061019961019436600461107c565b610314565b005b3480156101a757600080fd5b506101996101b6366004611100565b6103b4565b3480156101c757600080fd5b50600354610163906001600160a01b031681565b3480156101e757600080fd5b506101996101f6366004611141565b6103ed565b34801561020757600080fd5b50600154610163906001600160a01b031681565b34801561022757600080fd5b5061023b6102363660046111ad565b61045a565b604051908152602001610170565b34801561025557600080fd5b506101636102643660046111d9565b6002602052600090815260409020546001600160a01b031681565b34801561028b57600080fd5b5061023b61029a3660046111ad565b610500565b3480156102ab57600080fd5b5061023b6102ba366004611100565b610595565b3480156102cb57600080fd5b506101996102da3660046111d9565b6105b7565b3480156102eb57600080fd5b506101996102fa3660046111d9565b61065c565b34801561030b57600080fd5b50610199610753565b600054610100900460ff168061032d575060005460ff16155b6103495760405162461bcd60e51b81526004016100f5906111f6565b600054610100900460ff1615801561036b576000805461ffff19166101011790555b610373610821565b61037f868686866108d7565b600380546001600160a01b0319166001600160a01b03841617905580156103ac576000805461ff00191690555b505050505050565b6103bc610ab1565b6001600160a01b0383166103d9576103d48282610ae4565b505050565b6103d46001600160a01b0384168383610bfd565b6000546001600160a01b036201000090910416331461041e5760405162461bcd60e51b81526004016100f590611244565b821580159061042c57508015155b6104485760405162461bcd60e51b81526004016100f59061126a565b610454848484846108d7565b50505050565b60008061046684610c4f565b9050836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a157600080fd5b505afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d99190611299565b6104e490600a6113b8565b6104ee82856113c7565b6104f891906113e6565b949350505050565b60008061050c84610c4f565b905080846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561054857600080fd5b505afa15801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190611299565b61058b90600a6113b8565b6104ee90856113c7565b6000806105a2858461045a565b90506105ae8482610500565b95945050505050565b6000546001600160a01b03620100009091041633146105e85760405162461bcd60e51b81526004016100f590611244565b6001600160a01b03811661063a5760405162461bcd60e51b815260206004820152601960248201527870726f706f7365642d676f7665726e6f722d69732d7a65726f60381b60448201526064016100f5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b036201000090910416331461068d5760405162461bcd60e51b81526004016100f590611244565b6003546001600160a01b039081169082168114156106ed5760405162461bcd60e51b815260206004820152601d60248201527f6e65772d6f7261636c652d69732d73616d652d61732d63757272656e7400000060448201526064016100f5565b604080516001600160a01b038084168252841660208201527f91f0076b6a62d3cb799d1ebce63c4e8d031ed0a90443b8f6172b391682b58f4b910160405180910390a150600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146107a95760405162461bcd60e51b81526020600482015260196024820152783737ba16ba343296b83937b837b9b2b216b3b7bb32b93737b960391b60448201526064016100f5565b600154600080546040516001600160a01b039384169362010000909204909116917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d091a3600180546000805462010000600160b01b0319166001600160a01b03831662010000021790556001600160a01b0319169055565b600054610100900460ff168061083a575060005460ff16155b6108565760405162461bcd60e51b81526004016100f5906111f6565b600054610100900460ff16158015610878576000805461ffff19166101011790555b6000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a35080156108d4576000805461ff00191690555b50565b828181146108f75760405162461bcd60e51b81526004016100f59061126a565b60005b818110156103ac57600086868381811061091657610916611408565b905060200201602081019061092b91906111d9565b90506001600160a01b03811661097f5760405162461bcd60e51b8152602060048201526019602482015278616e2d61737365742d6861732d6e756c6c2d6164647265737360381b60448201526064016100f5565b6001600160a01b03808216600090815260026020526040812054909116908686858181106109af576109af611408565b90506020020160208101906109c491906111d9565b9050816001600160a01b0316816001600160a01b03161415610a285760405162461bcd60e51b815260206004820152601c60248201527f612d6e65772d6f7261636c652d73616d652d61732d63757272656e740000000060448201526064016100f5565b604080516001600160a01b038581168252848116602083015283168183015290517fa18d4edc0f9c89f7feb41d0243d7f20bf44c5b426ede1cc1014a31ab8eb724899181900360600190a16001600160a01b03928316600090815260026020526040902080546001600160a01b031916919093161790915550610aaa8161141e565b90506108fa565b6000546001600160a01b0362010000909104163314610ae25760405162461bcd60e51b81526004016100f590611244565b565b80471015610b345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100f5565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b81576040519150601f19603f3d011682016040523d82523d6000602084013e610b86565b606091505b50509050806103d45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100f5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103d4908490610dbb565b6001600160a01b038082166000908152600260205260408120549091168015610cf5576040516307ee40bf60e01b81526001600160a01b038216906307ee40bf90610c9e908690600401611007565b60206040518083038186803b158015610cb657600080fd5b505afa158015610cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cee9190611439565b9150610d75565b6003546001600160a01b031615610d36576003546040516307ee40bf60e01b81526001600160a01b03909116906307ee40bf90610c9e908690600401611007565b60405162461bcd60e51b815260206004820152601460248201527361737365742d776974686f75742d6f7261636c6560601b60448201526064016100f5565b60008211610db55760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642d707269636560981b60448201526064016100f5565b50919050565b6000610e10826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e8d9092919063ffffffff16565b8051909150156103d45780806020019051810190610e2e9190611452565b6103d45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100f5565b6060610e9c8484600085610ea6565b90505b9392505050565b606082471015610f075760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100f5565b843b610f555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100f5565b600080866001600160a01b03168587604051610f7191906114a0565b60006040518083038185875af1925050503d8060008114610fae576040519150601f19603f3d011682016040523d82523d6000602084013e610fb3565b606091505b5091509150610fc3828286610fce565b979650505050505050565b60608315610fdd575081610e9f565b825115610fed5782518084602001fd5b8160405162461bcd60e51b81526004016100f591906114bc565b6001600160a01b0391909116815260200190565b60008083601f84011261102d57600080fd5b50813567ffffffffffffffff81111561104557600080fd5b6020830191508360208260051b850101111561106057600080fd5b9250929050565b6001600160a01b03811681146108d457600080fd5b60008060008060006060868803121561109457600080fd5b853567ffffffffffffffff808211156110ac57600080fd5b6110b889838a0161101b565b909750955060208801359150808211156110d157600080fd5b506110de8882890161101b565b90945092505060408601356110f281611067565b809150509295509295909350565b60008060006060848603121561111557600080fd5b833561112081611067565b9250602084013561113081611067565b929592945050506040919091013590565b6000806000806040858703121561115757600080fd5b843567ffffffffffffffff8082111561116f57600080fd5b61117b8883890161101b565b9096509450602087013591508082111561119457600080fd5b506111a18782880161101b565b95989497509550505050565b600080604083850312156111c057600080fd5b82356111cb81611067565b946020939093013593505050565b6000602082840312156111eb57600080fd5b8135610e9f81611067565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b6020808252601590820152740d2dcecc2d8d2c85ac2e4e4c2f2e65ad8cadccee8d605b1b604082015260600190565b6000602082840312156112ab57600080fd5b815160ff81168114610e9f57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561130d5781600019048211156112f3576112f36112bc565b8085161561130057918102915b93841c93908002906112d7565b509250929050565b600082611324575060016113b2565b81611331575060006113b2565b816001811461134757600281146113515761136d565b60019150506113b2565b60ff841115611362576113626112bc565b50506001821b6113b2565b5060208310610133831016604e8410600b8410161715611390575081810a6113b2565b61139a83836112d2565b80600019048211156113ae576113ae6112bc565b0290505b92915050565b6000610e9f60ff841683611315565b60008160001904831182151516156113e1576113e16112bc565b500290565b60008261140357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611432576114326112bc565b5060010190565b60006020828403121561144b57600080fd5b5051919050565b60006020828403121561146457600080fd5b81518015158114610e9f57600080fd5b60005b8381101561148f578181015183820152602001611477565b838111156104545750506000910152565b600082516114b2818460208701611474565b9190910192915050565b60208152600082518060208401526114db816040850160208701611474565b601f01601f1916919091016040019291505056fea264697066735822122008d8a531ca29c4b4682d5bb4121a0f76ac20b89e45bd317aaf796d38feeecaf364736f6c63430008090033";

type MasterOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterOracle__factory extends ContractFactory {
  constructor(...args: MasterOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterOracle> {
    return super.deploy(overrides || {}) as Promise<MasterOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MasterOracle {
    return super.attach(address) as MasterOracle;
  }
  override connect(signer: Signer): MasterOracle__factory {
    return super.connect(signer) as MasterOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterOracleInterface {
    return new utils.Interface(_abi) as MasterOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterOracle {
    return new Contract(address, _abi, signerOrProvider) as MasterOracle;
  }
}
