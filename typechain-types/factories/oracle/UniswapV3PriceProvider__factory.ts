/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV3PriceProvider,
  UniswapV3PriceProviderInterface,
} from "../../oracle/UniswapV3PriceProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3CrossPoolOracle",
        name: "_crossPoolOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_twapPeriod",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "oldTwapPeriod",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newTwapPeriod",
        type: "uint32",
      },
    ],
    name: "TwapPeriodUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposedGovernor",
        type: "address",
      },
    ],
    name: "UpdatedGovernor",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crossPoolOracle",
    outputs: [
      {
        internalType: "contract IUniswapV3CrossPoolOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPriceInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "_priceInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastUpdatedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposedGovernor",
        type: "address",
      },
    ],
    name: "transferGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "twapPeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newTwapPeriod",
        type: "uint32",
      },
    ],
    name: "updateTwapPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type UniswapV3PriceProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceProvider__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _crossPoolOracle: PromiseOrValue<string>,
    _usdToken: PromiseOrValue<string>,
    _twapPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3PriceProvider> {
    return super.deploy(
      _crossPoolOracle,
      _usdToken,
      _twapPeriod,
      overrides || {}
    ) as Promise<UniswapV3PriceProvider>;
  }
  override getDeployTransaction(
    _crossPoolOracle: PromiseOrValue<string>,
    _usdToken: PromiseOrValue<string>,
    _twapPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _crossPoolOracle,
      _usdToken,
      _twapPeriod,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3PriceProvider {
    return super.attach(address) as UniswapV3PriceProvider;
  }
  override connect(signer: Signer): UniswapV3PriceProvider__factory {
    return super.connect(signer) as UniswapV3PriceProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceProviderInterface {
    return new utils.Interface(_abi) as UniswapV3PriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3PriceProvider;
  }
}
