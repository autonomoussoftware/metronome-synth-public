/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ChainlinkPriceProvider,
  ChainlinkPriceProviderInterface,
} from "../../oracle/ChainlinkPriceProvider";

const _abi = [
  {
    inputs: [],
    name: "TEN_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aggregator",
        type: "address",
      },
    ],
    name: "getPriceInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "_priceInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastUpdatedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806307ee40bf146100465780631c1b8772146100735780635d499b1b14610086575b600080fd5b6100596100543660046101b1565b6100a0565b604080519283526020830191909152015b60405180910390f35b6100846100813660046101b1565b50565b005b6100926402540be40081565b60405190815260200161006a565b6000806100ac836100b6565b9094909350915050565b600080600080846001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100f557600080fd5b505afa158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d9190610200565b509350509250506402540be40061014383610157565b61014d9190610250565b9590945092505050565b6000808212156101ad5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640160405180910390fd5b5090565b6000602082840312156101c357600080fd5b81356001600160a01b03811681146101da57600080fd5b9392505050565b805169ffffffffffffffffffff811681146101fb57600080fd5b919050565b600080600080600060a0868803121561021857600080fd5b610221866101e1565b9450602086015193506040860151925060608601519150610244608087016101e1565b90509295509295909350565b600081600019048311821515161561027857634e487b7160e01b600052601160045260246000fd5b50029056fea264697066735822122073107965703fc1b4c8052222ded585edbb2769c0489bd5d7f6f73b8ce1791a5864736f6c63430008090033";

type ChainlinkPriceProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkPriceProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkPriceProvider__factory extends ContractFactory {
  constructor(...args: ChainlinkPriceProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkPriceProvider> {
    return super.deploy(overrides || {}) as Promise<ChainlinkPriceProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChainlinkPriceProvider {
    return super.attach(address) as ChainlinkPriceProvider;
  }
  override connect(signer: Signer): ChainlinkPriceProvider__factory {
    return super.connect(signer) as ChainlinkPriceProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkPriceProviderInterface {
    return new utils.Interface(_abi) as ChainlinkPriceProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkPriceProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkPriceProvider;
  }
}
