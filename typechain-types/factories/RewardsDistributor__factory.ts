/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RewardsDistributor,
  RewardsDistributorInterface,
} from "../RewardsDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldSpeed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "TokenSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supplyIndex",
        type: "uint256",
      },
    ],
    name: "TokensAccruedUpdated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "INITIAL_INDEX",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_REWARD_TOKENS",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountIndexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "tokenSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "tokenStates",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensAccruedOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "updateBeforeMintOrBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "updateBeforeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newSpeed",
        type: "uint256",
      },
    ],
    name: "updateTokenSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_speeds",
        type: "uint256[]",
      },
    ],
    name: "updateTokenSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121de806100206000396000f3fe6080604052600436106101235760003560e01c806389cb096a116100a0578063b17b23a011610064578063b17b23a014610425578063b9afda2d14610445578063ef5cfb8c14610465578063f77c479114610485578063f7c618c1146104a55761016b565b806389cb096a1461032257806392eefe9b1461038b578063a0cfa0dd146103ab578063a428d9c8146103d8578063aa629975146103f85761016b565b80632026ffa3116100e75780632026ffa31461028d578063485cc955146102ad5780634f64b2be146102cd5780635d0cde97146102ed57806362c06767146103025761016b565b8063013bc51c146101aa57806301bc3acb146101f55780630c340a2414610217578063160c3a03146102395780631b30f0c01461026d5761016b565b3661016b5760405162461bcd60e51b81526020600482015260136024820152721c9958d95a5d994b5b9bdd0b585b1b1bddd959606a1b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b6044820152606401610162565b3480156101b657600080fd5b506101e26101c5366004611b1d565b603860209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561020157600080fd5b50610215610210366004611ba1565b6104c5565b005b34801561022357600080fd5b5061022c6105a8565b6040516101ec9190611c0c565b34801561024557600080fd5b50610255670de0b6b3a764000081565b6040516001600160e01b0390911681526020016101ec565b34801561027957600080fd5b50610215610288366004611b1d565b61062a565b34801561029957600080fd5b506102156102a8366004611cfd565b610668565b3480156102b957600080fd5b506102156102c8366004611b1d565b6106cd565b3480156102d957600080fd5b5061022c6102e8366004611d4c565b61080a565b3480156102f957600080fd5b50610255601481565b34801561030e57600080fd5b5061021561031d366004611d65565b610834565b34801561032e57600080fd5b5061036761033d366004611da6565b6037602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff9091166020830152016101ec565b34801561039757600080fd5b506102156103a6366004611da6565b610868565b3480156103b757600080fd5b506101e26103c6366004611da6565b60366020526000908152604090205481565b3480156103e457600080fd5b506102156103f3366004611dc3565b610918565b34801561040457600080fd5b506101e2610413366004611da6565b60396020526000908152604090205481565b34801561043157600080fd5b50610215610440366004611e7a565b610a9d565b34801561045157600080fd5b50610215610460366004611ec5565b610ae1565b34801561047157600080fd5b50610215610480366004611da6565b610b23565b34801561049157600080fd5b5060025461022c906001600160a01b031681565b3480156104b157600080fd5b5060345461022c906001600160a01b031681565b6104cd6105a8565b6001600160a01b0316336001600160a01b0316146104fd5760405162461bcd60e51b815260040161016290611ef1565b8281811461053d5760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a590b5a5b9c1d5d609a1b6044820152606401610162565b60005b818110156105a05761059086868381811061055d5761055d611f17565b90506020020160208101906105729190611da6565b85858481811061058457610584611f17565b90506020020135610b8a565b61059981611f43565b9050610540565b505050505050565b6002546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b1580156105ed57600080fd5b505afa158015610601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106259190611f5e565b905090565b6001600160a01b0382166000908152603760205260409020546001600160e01b0316156106645761065a826110f9565b61066482826112d8565b5050565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061069e5761069e611f17565b60200260200101906001600160a01b031690816001600160a01b0316815250506106c88183610918565b505050565b600054610100900460ff16806106e6575060005460ff16155b6107025760405162461bcd60e51b815260040161016290611f7b565b600054610100900460ff16158015610724576000805461ffff19166101011790555b61072c61145d565b6001600160a01b0383166107775760405162461bcd60e51b815260206004820152601260248201527118dbdb9d1c9bdb1b195c8b5a5ccb5b9d5b1b60721b6044820152606401610162565b6001600160a01b0382166107c45760405162461bcd60e51b81526020600482015260146024820152731c995dd85c990b5d1bdad95b8b5a5ccb5b9d5b1b60621b6044820152606401610162565b600280546001600160a01b038086166001600160a01b031992831617909255603480549285169290911691909117905580156106c8576000805461ff0019169055505050565b6035818154811061081a57600080fd5b6000918252602090912001546001600160a01b0316905081565b61083c6114c8565b6001600160a01b038316610854576106c88282611502565b6106c86001600160a01b038416838361161b565b6108706105a8565b6001600160a01b0316336001600160a01b0316146108a05760405162461bcd60e51b815260040161016290611ef1565b6001600160a01b0381166108f65760405162461bcd60e51b815260206004820152601e60248201527f6e65772d636f6e74726f6c6c65722d616464726573732d69732d7a65726f00006044820152606401610162565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154141561096b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610162565b60026001558151815160005b81811015610a2657600084828151811061099357610993611f17565b6020908102919091018101516001600160a01b038116600090815260379092526040909120549091506001600160e01b031615610a15576109d3816110f9565b60005b84811015610a1357610a01828883815181106109f4576109f4611f17565b60200260200101516112d8565b80610a0b81611f43565b9150506109d6565b505b50610a1f81611f43565b9050610977565b5060005b82811015610a92576000858281518110610a4657610a46611f17565b60200260200101519050610a7f8160396000846001600160a01b03166001600160a01b031681526020019081526020016000205461166d565b5080610a8a81611f43565b915050610a2a565b505060018055505050565b6001600160a01b0383166000908152603760205260409020546001600160e01b0316156106c857610acd836110f9565b610ad783836112d8565b6106c883826112d8565b610ae96105a8565b6001600160a01b0316336001600160a01b031614610b195760405162461bcd60e51b815260040161016290611ef1565b6106648282610b8a565b610b87816035805480602002602001604051908101604052809291908181526020018280548015610b7d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b5f575b5050505050610668565b50565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316633605b51b6040518163ffffffff1660e01b815260040160006040518083038186803b158015610bdb57600080fd5b505afa158015610bef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c179190810190611fc9565b805190915060005b81811015610c7357306001600160a01b0316838281518110610c4357610c43611f17565b60200260200101516001600160a01b03161415610c635760019350610c73565b610c6c81611f43565b9050610c1f565b5082610cb95760405162461bcd60e51b8152602060048201526015602482015274191a5cdd1c9a589d5d1bdc8b5b9bdd0b5859191959605a1b6044820152606401610162565b600254604051633af5be4760e01b815286916001600160a01b031690633af5be4790610ce9908490600401611c0c565b60206040518083038186803b158015610d0157600080fd5b505afa158015610d15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d399190612057565b610ef0576000816001600160a01b0316638230ecd66040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7857600080fd5b505afa158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db09190611f5e565b6002546040516309bf6ca360e31b81529192506001600160a01b031690634dfb651890610de1908490600401611c0c565b60206040518083038186803b158015610df957600080fd5b505afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e319190612057565b610e4d5760405162461bcd60e51b815260040161016290612079565b816001600160a01b0316816001600160a01b031663f8d898986040518163ffffffff1660e01b815260040160206040518083038186803b158015610e9057600080fd5b505afa158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec89190611f5e565b6001600160a01b031614610eee5760405162461bcd60e51b815260040161016290612079565b505b6001600160a01b0386166000908152603660205260409020548015610f1d57610f18876110f9565b611093565b8515611093576001600160a01b0387166000908152603760205260409020546001600160e01b031661104f57603554601411610f975760405162461bcd60e51b8152602060048201526019602482015278726561636865642d6d61782d7265776172642d746f6b656e7360381b6044820152606401610162565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610fc242611775565b63ffffffff9081169091526001600160a01b0389166000818152603760209081526040822085519590910151909316600160e01b026001600160e01b03909416939093179091556035805460018101825592527fcfa4bec1d3298408bb5afcfcd9c430549c5b31f8aa5c5848151c0a55f473c34d90910180546001600160a01b0319169091179055611093565b61105842611775565b6001600160a01b0388166000908152603760205260409020805463ffffffff92909216600160e01b026001600160e01b039092169190911790555b8581146110f0576001600160a01b03871660008181526036602090815260409182902089905581518481529081018990527f07295410ddc875d5ff9b778ece2c279c9b91abeefd296803662b28cf6ad33c08910160405180910390a25b50505050505050565b6001600160a01b0381166000908152603760209081526040808320603690925282205481549192909142919061113c90600160e01b900463ffffffff16836120a0565b905060008111801561114e5750600083115b1561128a576000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561118e57600080fd5b505afa1580156111a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c691906120b7565b905060006111d485846120d0565b905060008083116111e65760006111f0565b6111f082846117de565b875490915060009061120c9083906001600160e01b03166120ef565b905060405180604001604052806112228361181b565b6001600160e01b0316815260200161123988611775565b63ffffffff9081169091526001600160a01b038b16600090815260376020908152604090912083519390910151909116600160e01b026001600160e01b03909216919091179055506112d192505050565b6000811180156112a3575083546001600160e01b031615155b156112d1576112b182611775565b845463ffffffff91909116600160e01b026001600160e01b039091161784555b5050505050565b6001600160a01b0382811660009081526037602090815260408083205460388352818420948616845293909152902080546001600160e01b039092169081905590801580156113275750600082115b156113375750670de0b6b3a76400005b600061134382846120a0565b905060006113cd82876001600160a01b03166370a08231886040518263ffffffff1660e01b81526004016113779190611c0c565b60206040518083038186803b15801561138f57600080fd5b505afa1580156113a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c791906120b7565b90611884565b6001600160a01b038616600090815260396020526040812054919250906113f59083906120ef565b6001600160a01b0387811660008181526039602090815260409182902085905581518781529081018a90529394509092918a16917f49abdf3748a8d465b0d3d5d126dab076f5109ea80b761c4c1c45b2710165087b910160405180910390a350505050505050565b600054610100900460ff1680611476575060005460ff16155b6114925760405162461bcd60e51b815260040161016290611f7b565b600054610100900460ff161580156114b4576000805461ffff19166101011790555b8015610b87576000805461ff001916905550565b6114d06105a8565b6001600160a01b0316336001600160a01b0316146115005760405162461bcd60e51b815260040161016290611ef1565b565b804710156115525760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610162565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461159f576040519150601f19603f3d011682016040523d82523d6000602084013e6115a4565b606091505b50509050806106c85760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610162565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526106c89084906118bc565b6034546040516370a0823160e01b81526000916001600160a01b0316906370a082319061169e903090600401611c0c565b60206040518083038186803b1580156116b657600080fd5b505afa1580156116ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ee91906120b7565b90506000821180156117005750808211155b156106c8576001600160a01b0380841660009081526039602052604081205560345461172e9116848461161b565b604080516001600160a01b0385168152602081018490527f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241910160405180910390a1505050565b600063ffffffff8211156117da5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610162565b5090565b6000816117ec600282612107565b6117fe670de0b6b3a7640000866120d0565b61180891906120ef565b6118129190612107565b90505b92915050565b60006001600160e01b038211156117da5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610162565b6000821580611891575081155b1561189e57506000611815565b670de0b6b3a76400006118b2600282612107565b6117fe84866120d0565b6000611911826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661198e9092919063ffffffff16565b8051909150156106c8578080602001905181019061192f9190612057565b6106c85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610162565b606061199d84846000856119a7565b90505b9392505050565b606082471015611a085760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610162565b843b611a565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610162565b600080866001600160a01b03168587604051611a729190612159565b60006040518083038185875af1925050503d8060008114611aaf576040519150601f19603f3d011682016040523d82523d6000602084013e611ab4565b606091505b5091509150611ac4828286611acf565b979650505050505050565b60608315611ade5750816119a0565b825115611aee5782518084602001fd5b8160405162461bcd60e51b81526004016101629190612175565b6001600160a01b0381168114610b8757600080fd5b60008060408385031215611b3057600080fd5b8235611b3b81611b08565b91506020830135611b4b81611b08565b809150509250929050565b60008083601f840112611b6857600080fd5b5081356001600160401b03811115611b7f57600080fd5b6020830191508360208260051b8501011115611b9a57600080fd5b9250929050565b60008060008060408587031215611bb757600080fd5b84356001600160401b0380821115611bce57600080fd5b611bda88838901611b56565b90965094506020870135915080821115611bf357600080fd5b50611c0087828801611b56565b95989497509550505050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611c5e57611c5e611c20565b604052919050565b60006001600160401b03821115611c7f57611c7f611c20565b5060051b60200190565b600082601f830112611c9a57600080fd5b81356020611caf611caa83611c66565b611c36565b82815260059290921b84018101918181019086841115611cce57600080fd5b8286015b84811015611cf2578035611ce581611b08565b8352918301918301611cd2565b509695505050505050565b60008060408385031215611d1057600080fd5b8235611d1b81611b08565b915060208301356001600160401b03811115611d3657600080fd5b611d4285828601611c89565b9150509250929050565b600060208284031215611d5e57600080fd5b5035919050565b600080600060608486031215611d7a57600080fd5b8335611d8581611b08565b92506020840135611d9581611b08565b929592945050506040919091013590565b600060208284031215611db857600080fd5b81356119a081611b08565b60008060408385031215611dd657600080fd5b82356001600160401b0380821115611ded57600080fd5b818501915085601f830112611e0157600080fd5b81356020611e11611caa83611c66565b82815260059290921b84018101918181019089841115611e3057600080fd5b948201945b83861015611e57578535611e4881611b08565b82529482019490820190611e35565b96505086013592505080821115611e6d57600080fd5b50611d4285828601611c89565b600080600060608486031215611e8f57600080fd5b8335611e9a81611b08565b92506020840135611eaa81611b08565b91506040840135611eba81611b08565b809150509250925092565b60008060408385031215611ed857600080fd5b8235611ee381611b08565b946020939093013593505050565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611f5757611f57611f2d565b5060010190565b600060208284031215611f7057600080fd5b81516119a081611b08565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006020808385031215611fdc57600080fd5b82516001600160401b03811115611ff257600080fd5b8301601f8101851361200357600080fd5b8051612011611caa82611c66565b81815260059190911b8201830190838101908783111561203057600080fd5b928401925b82841015611ac457835161204881611b08565b82529284019290840190612035565b60006020828403121561206957600080fd5b815180151581146119a057600080fd5b6020808252600d908201526c34b73b30b634b216ba37b5b2b760991b604082015260600190565b6000828210156120b2576120b2611f2d565b500390565b6000602082840312156120c957600080fd5b5051919050565b60008160001904831182151516156120ea576120ea611f2d565b500290565b6000821982111561210257612102611f2d565b500190565b60008261212457634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101561214457818101518382015260200161212c565b83811115612153576000848401525b50505050565b6000825161216b818460208701612129565b9190910192915050565b6020815260008251806020840152612194816040850160208701612129565b601f01601f1916919091016040019291505056fea26469706673582212206169960b00d3b6d4f5eac1727b39499eda8f6795499212e5ae8d5cf4c53bad4864736f6c63430008090033";

type RewardsDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsDistributor__factory extends ContractFactory {
  constructor(...args: RewardsDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardsDistributor> {
    return super.deploy(overrides || {}) as Promise<RewardsDistributor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RewardsDistributor {
    return super.attach(address) as RewardsDistributor;
  }
  override connect(signer: Signer): RewardsDistributor__factory {
    return super.connect(signer) as RewardsDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsDistributorInterface {
    return new utils.Interface(_abi) as RewardsDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsDistributor {
    return new Contract(address, _abi, signerOrProvider) as RewardsDistributor;
  }
}
