/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IUniswapV3CrossPoolOracle,
  IUniswapV3CrossPoolOracleInterface,
} from "../../../interface/oracle/IUniswapV3CrossPoolOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_twapPeriod",
        type: "uint32",
      },
    ],
    name: "assetToAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_twapPeriod",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_routeThruToken",
        type: "address",
      },
      {
        internalType: "uint24[2]",
        name: "_poolFees",
        type: "uint24[2]",
      },
    ],
    name: "assetToAssetThruRoute",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_twapPeriod",
        type: "uint32",
      },
    ],
    name: "assetToEth",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ethAmountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_twapPeriod",
        type: "uint32",
      },
    ],
    name: "ethToAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IUniswapV3CrossPoolOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV3CrossPoolOracleInterface {
    return new utils.Interface(_abi) as IUniswapV3CrossPoolOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IUniswapV3CrossPoolOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IUniswapV3CrossPoolOracle;
  }
}
