/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ControllerMock,
  ControllerMockInterface,
} from "../../mock/ControllerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IDepositToken",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "contract IMasterOracle",
        name: "_masterOracle",
        type: "address",
      },
      {
        internalType: "contract ISyntheticToken",
        name: "_syntheticToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Open",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Shutdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposedGovernor",
        type: "address",
      },
    ],
    name: "UpdatedGovernor",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addDepositToken",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRewardsDistributor",
        name: "",
        type: "address",
      },
    ],
    name: "addRewardsDistributor",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addSyntheticToken",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addToDebtTokensOfAccount",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addToDepositTokensOfAccount",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "debtFloorInUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "debtOf",
    outputs: [
      {
        internalType: "uint256",
        name: "_debtInUsd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "debtPositionOf",
    outputs: [
      {
        internalType: "bool",
        name: "_isHealthy",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_depositInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_debtInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issuableLimitInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issuableInUsd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "contract IDepositToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "depositTokenOf",
    outputs: [
      {
        internalType: "contract IDepositToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "everythingStopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getDebtTokensOfAccount",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getDepositTokensOfAccount",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsDistributors",
    outputs: [
      {
        internalType: "contract IRewardsDistributor[]",
        name: "_rewardsDistributors",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getSyntheticTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDepositToken",
        name: "",
        type: "address",
      },
    ],
    name: "isDepositTokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "_syntheticToken",
        type: "address",
      },
    ],
    name: "isSyntheticTokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issueFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "contract IDepositToken",
        name: "",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "masterOracle",
    outputs: [
      {
        internalType: "contract IMasterOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mockCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "open",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDepositToken",
        name: "",
        type: "address",
      },
    ],
    name: "removeDepositToken",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "removeFromDebtTokensOfAccount",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "removeFromDepositTokensOfAccount",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "",
        type: "address",
      },
    ],
    name: "removeSyntheticToken",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "repayFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shutdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "",
        type: "address",
      },
      {
        internalType: "contract ISyntheticToken",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "syntheticToken",
    outputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposedGovernor",
        type: "address",
      },
    ],
    name: "transferGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDebtFloorInUsd",
        type: "uint256",
      },
    ],
    name: "updateDebtFloor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDepositFee",
        type: "uint256",
      },
    ],
    name: "updateDepositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newIssueFee",
        type: "uint256",
      },
    ],
    name: "updateIssueFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateLiquidatorLiquidationFee",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMasterOracle",
        name: "_newMasterOracle",
        type: "address",
      },
    ],
    name: "updateMasterOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateMaxLiquidable",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateProtocolLiquidationFee",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRepayFee",
        type: "uint256",
      },
    ],
    name: "updateRepayFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateSwapFee",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasury",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "updateWithdrawFee",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c7038038062001c708339810160408190526200003491620000da565b6000805462010000600160b01b03191633620100008102919091178255604051909182917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d0908290a350600480546001600160a01b039485166001600160a01b0319918216179091556005805493851693821693909317909255600380549190931691161790556200012e565b6001600160a01b0381168114620000d757600080fd5b50565b600080600060608486031215620000f057600080fd5b8351620000fd81620000c1565b60208501519093506200011081620000c1565b60408501519092506200012381620000c1565b809150509250925092565b611b32806200013e6000396000f3fe6080604052600436106102d95760003560e01c80638230ecd61161017b578063daf635de116100d7578063f0c80d3b11610085578063f0c80d3b146105a3578063f36c7d9814610507578063f3b27bc31461087a578063f60928091461088f578063fb01600d146105d4578063fc0e74d1146108a5578063fcfff16f146108ba57610321565b8063daf635de146105a3578063dbe466b114610507578063dde3ab95146107b9578063df791e5014610803578063e941fa7814610823578063eaada38214610839578063ecf3a3f91461085957610321565b8063a20f37e711610134578063a20f37e714610507578063abc9b45e1461071c578063b6aa515b14610759578063bf16f65a146105a3578063c89039c514610779578063d176e05f1461061f578063d283e75f1461079957610321565b80638230ecd61461067c5780638456cb591461069c57806384d6f1ce146105a357806387cddc86146106b157806388156a35146106dc5780638a11a370146106fc57610321565b806357f2e581116102355780636ee4800f116101e35780636ee4800f146105e957806375c6f8ec14610413578063770b69b41461041357806379e40cba146105075780637c0f59f4146106095780637d3551631461061f5780637f51bb1f1461063f57610321565b806357f2e581146105225780635c975abb1461054257806361d027b31461056357806362c067671461058357806364831b31146105a357806367a52793146105be578063681390e6146105d457610321565b80633605b51b116102925780633605b51b146104555780633af5be47146104725780633de2f6b2146104a35780633f4ba83a146104c35780633f5fc131146104135780634dfb6518146104d857806356aaee2d1461050757610321565b8063017def57146103605780630c340a24146103825780631a4660ce146103be57806323e3fbd5146103de578063275038d0146104135780632a9133c11461043157610321565b366103215760405162461bcd60e51b81526020600482015260136024820152721c9958d95a5d994b5b9bdd0b585b1b1bddd959606a1b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b6044820152606401610318565b34801561036c57600080fd5b5061038061037b366004611654565b600755565b005b34801561038e57600080fd5b506000546103a8906201000090046001600160a01b031681565b6040516103b5919061166d565b60405180910390f35b3480156103ca57600080fd5b506103806103d9366004611654565b600a55565b3480156103ea57600080fd5b506103fe6103f9366004611696565b6108cf565b604080519283526020830191909152016103b5565b34801561041f57600080fd5b5061038061042e366004611696565b50565b34801561043d57600080fd5b5061044760065481565b6040519081526020016103b5565b34801561046157600080fd5b5060605b6040516103b591906116b3565b34801561047e57600080fd5b5061049361048d366004611696565b50600190565b60405190151581526020016103b5565b3480156104af57600080fd5b506103806104be366004611700565b6108ea565b3480156104cf57600080fd5b50610380610902565b3480156104e457600080fd5b506104936104f3366004611696565b6003546001600160a01b0391821691161490565b34801561051357600080fd5b506103806104be366004611696565b34801561052e57600080fd5b5061038061053d366004611654565b600655565b34801561054e57600080fd5b5060015461049390600160a01b900460ff1681565b34801561056f57600080fd5b506002546103a8906001600160a01b031681565b34801561058f57600080fd5b5061038061059e366004611753565b6109ea565b3480156105af57600080fd5b506103806104be366004611654565b3480156105ca57600080fd5b5061044760075481565b3480156105e057600080fd5b50610465610a23565b3480156105f557600080fd5b50610380610604366004611803565b610a3d565b34801561061557600080fd5b5061044760085481565b34801561062b57600080fd5b5061046561063a366004611696565b610a23565b34801561064b57600080fd5b5061038061065a366004611696565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b34801561068857600080fd5b506003546103a8906001600160a01b031681565b3480156106a857600080fd5b50610380610ace565b3480156106bd57600080fd5b506103a86106cc366004611696565b506004546001600160a01b031690565b3480156106e857600080fd5b506103806106f7366004611654565b600855565b34801561070857600080fd5b506001546103a8906001600160a01b031681565b34801561072857600080fd5b50610380610737366004611696565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b34801561076557600080fd5b50610380610774366004611696565b610b7d565b34801561078557600080fd5b506004546103a8906001600160a01b031681565b3480156107a557600080fd5b506104476107b4366004611696565b610c22565b3480156107c557600080fd5b506107d96107d4366004611696565b610dc1565b6040805195151586526020860194909452928401919091526060830152608082015260a0016103b5565b34801561080f57600080fd5b5061044761081e366004611753565b610f98565b34801561082f57600080fd5b5061044760095481565b34801561084557600080fd5b506005546103a8906001600160a01b031681565b34801561086557600080fd5b5060015461049390600160a81b900460ff1681565b34801561088657600080fd5b50610380610fb2565b34801561089b57600080fd5b50610447600a5481565b3480156108b157600080fd5b50610380611080565b3480156108c657600080fd5b50610380611117565b60008060405162461bcd60e51b815260040161031890611896565b60405162461bcd60e51b815260040161031890611896565b600154600160a01b900460ff166109485760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0b5c185d5cd95960b21b6044820152606401610318565b600154600160a81b900460ff16156109725760405162461bcd60e51b8152600401610318906118c7565b6000546001600160a01b03620100009091041633146109a35760405162461bcd60e51b8152600401610318906118e9565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516109e0919061166d565b60405180910390a1565b6109f26111c4565b6001600160a01b038316610a0f57610a0a82826111f7565b505050565b610a0a6001600160a01b0384168383611310565b606060405162461bcd60e51b815260040161031890611896565b600080836001600160a01b031683604051610a58919061193f565b6000604051808303816000865af19150503d8060008114610a95576040519150601f19603f3d011682016040523d82523d6000602084013e610a9a565b606091505b509150915081610aa982611366565b90610ac75760405162461bcd60e51b8152600401610318919061195b565b5050505050565b600154600160a01b900460ff1615610b115760405162461bcd60e51b81526020600482015260066024820152651c185d5cd95960d21b6044820152606401610318565b6000546001600160a01b0362010000909104163314610b425760405162461bcd60e51b8152600401610318906118e9565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109d33390565b6000546001600160a01b0362010000909104163314610bae5760405162461bcd60e51b8152600401610318906118e9565b6001600160a01b038116610c005760405162461bcd60e51b815260206004820152601960248201527870726f706f7365642d676f7665726e6f722d69732d7a65726f60381b6044820152606401610318565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6003546000906001600160a01b031615610dbc5760035460408051631f1b131360e31b815290516000926001600160a01b03169163f8d89898916004808301926020929190829003018186803b158015610c7b57600080fd5b505afa158015610c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb3919061198e565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401610cde919061166d565b60206040518083038186803b158015610cf657600080fd5b505afa158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e91906119ab565b600554600354604051624686dd60e91b81529293506001600160a01b0391821692638d0dba0092610d6592169085906004016119c4565b60206040518083038186803b158015610d7d57600080fd5b505afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906119ab565b9392505050565b919050565b600480546040516370a0823160e01b815260019260009283928392839283926001600160a01b03909116916370a0823191610dfe918b910161166d565b60206040518083038186803b158015610e1657600080fd5b505afa158015610e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4e91906119ab565b60055460048054604051624686dd60e91b81529394506001600160a01b0392831693638d0dba0093610e85939216918691016119c4565b60206040518083038186803b158015610e9d57600080fd5b505afa158015610eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed591906119ab565b9450610ee087610c22565b9350610f72600460009054906101000a90046001600160a01b03166001600160a01b031663dcaf9c446040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3357600080fd5b505afa158015610f47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6b91906119ab565b86906113b5565b9250828410610f82576000610f8c565b610f8c84846119f3565b91505091939590929450565b600060405162461bcd60e51b815260040161031890611896565b6001546001600160a01b031633146110085760405162461bcd60e51b81526020600482015260196024820152783737ba16ba343296b83937b837b9b2b216b3b7bb32b93737b960391b6044820152606401610318565b600154600080546040516001600160a01b039384169362010000909204909116917fd4459d5b8b913cab0244230fd9b1c08b6ceace7fe9230e60d0f74cbffdf849d091a3600180546000805462010000600160b01b0319166001600160a01b03831662010000021790556001600160a01b0319169055565b600154600160a81b900460ff16156110aa5760405162461bcd60e51b8152600401610318906118c7565b6000546001600160a01b03620100009091041633146110db5760405162461bcd60e51b8152600401610318906118e9565b6001805461ffff60a01b191661010160a01b1790557f28b4c24cb1012c094cd2f59f98e89d791973295f8fda6eaa118022d6d318960a336109d3565b600154600160a81b900460ff1661115f5760405162461bcd60e51b815260206004820152600c60248201526b3737ba16b9b43aba3237bbb760a11b6044820152606401610318565b6000546001600160a01b03620100009091041633146111905760405162461bcd60e51b8152600401610318906118e9565b6001805460ff60a81b191690557fece7583a70a505ef0e36d4dec768f5ae597713e09c26011022599ee01abdabfc336109d3565b6000546001600160a01b03620100009091041633146111f55760405162461bcd60e51b8152600401610318906118e9565b565b804710156112475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610318565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611294576040519150601f19603f3d011682016040523d82523d6000602084013e611299565b606091505b5050905080610a0a5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610318565b610a0a8363a9059cbb60e01b848460405160240161132f9291906119c4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261140a565b8051606090604481101561138a575050604080516020810190915260008152919050565b6004830180516003198301825290936113ac9083810160200190602401611a0a565b93525090919050565b60008215806113c2575081155b156113cf57506000611404565b670de0b6b3a76400006113e3600282611a81565b6113ed8486611aa3565b6113f79190611ac2565b6114019190611a81565b90505b92915050565b600061145f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114dc9092919063ffffffff16565b805190915015610a0a578080602001905181019061147d9190611ada565b610a0a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610318565b60606114eb84846000856114f3565b949350505050565b6060824710156115545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610318565b843b6115a25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610318565b600080866001600160a01b031685876040516115be919061193f565b60006040518083038185875af1925050503d80600081146115fb576040519150601f19603f3d011682016040523d82523d6000602084013e611600565b606091505b509150915061161082828661161b565b979650505050505050565b6060831561162a575081610db5565b82511561163a5782518084602001fd5b8160405162461bcd60e51b8152600401610318919061195b565b60006020828403121561166657600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461042e57600080fd5b6000602082840312156116a857600080fd5b8135610db581611681565b6020808252825182820181905260009190848201906040850190845b818110156116f45783516001600160a01b0316835292840192918401916001016116cf565b50909695505050505050565b6000806000806080858703121561171657600080fd5b843561172181611681565b9350602085013561173181611681565b925060408501359150606085013561174881611681565b939692955090935050565b60008060006060848603121561176857600080fd5b833561177381611681565b9250602084013561178381611681565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117d3576117d3611794565b604052919050565b600067ffffffffffffffff8211156117f5576117f5611794565b50601f01601f191660200190565b6000806040838503121561181657600080fd5b823561182181611681565b9150602083013567ffffffffffffffff81111561183d57600080fd5b8301601f8101851361184e57600080fd5b803561186161185c826117db565b6117aa565b81815286602083850101111561187657600080fd5b816020840160208301376000602083830101528093505050509250929050565b6020808252601790820152761b5bd8dacb591bd95ccb5b9bdd0b5a5b5c1b195b595b9d604a1b604082015260600190565b60208082526008908201526739b43aba3237bbb760c11b604082015260600190565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b60005b8381101561192a578181015183820152602001611912565b83811115611939576000848401525b50505050565b6000825161195181846020870161190f565b9190910192915050565b602081526000825180602084015261197a81604085016020870161190f565b601f01601f19169190910160400192915050565b6000602082840312156119a057600080fd5b8151610db581611681565b6000602082840312156119bd57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600082821015611a0557611a056119dd565b500390565b600060208284031215611a1c57600080fd5b815167ffffffffffffffff811115611a3357600080fd5b8201601f81018413611a4457600080fd5b8051611a5261185c826117db565b818152856020838501011115611a6757600080fd5b611a7882602083016020860161190f565b95945050505050565b600082611a9e57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611abd57611abd6119dd565b500290565b60008219821115611ad557611ad56119dd565b500190565b600060208284031215611aec57600080fd5b81518015158114610db557600080fdfea26469706673582212200c7f2143262af4a7e0d293aa060eea61236edf30b5fb58351a347d965d32299f64736f6c63430008090033";

type ControllerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ControllerMock__factory extends ContractFactory {
  constructor(...args: ControllerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _depositToken: PromiseOrValue<string>,
    _masterOracle: PromiseOrValue<string>,
    _syntheticToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ControllerMock> {
    return super.deploy(
      _depositToken,
      _masterOracle,
      _syntheticToken,
      overrides || {}
    ) as Promise<ControllerMock>;
  }
  override getDeployTransaction(
    _depositToken: PromiseOrValue<string>,
    _masterOracle: PromiseOrValue<string>,
    _syntheticToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositToken,
      _masterOracle,
      _syntheticToken,
      overrides || {}
    );
  }
  override attach(address: string): ControllerMock {
    return super.attach(address) as ControllerMock;
  }
  override connect(signer: Signer): ControllerMock__factory {
    return super.connect(signer) as ControllerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerMockInterface {
    return new utils.Interface(_abi) as ControllerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ControllerMock {
    return new Contract(address, _abi, signerOrProvider) as ControllerMock;
  }
}
