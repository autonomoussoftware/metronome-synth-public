/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenHolderMock,
  TokenHolderMockInterface,
} from "../../mock/TokenHolderMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sweeper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleAcceptETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161078938038061078983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106f6806100936000396000f3fe6080604052600436106100435760003560e01c806362c06767146100e75780639189a59e14610107578063b352f44414610144578063e13d1f0414610175576100a8565b366100a857600054600160a01b900460ff166100a65760405162461bcd60e51b815260206004820152601a60248201527f6e6f742d616c6c6f7765642d746f2d726563656976652d65746800000000000060448201526064015b60405180910390fd5b005b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b604482015260640161009d565b3480156100f357600080fd5b506100a66101023660046105de565b6101a3565b34801561011357600080fd5b50600054610127906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015057600080fd5b5060005461016590600160a01b900460ff1681565b604051901515815260200161013b565b34801561018157600080fd5b506000805460ff60a01b198116600160a01b9182900460ff1615909102179055005b6101ab6101dc565b6001600160a01b0383166101c8576101c38282610226565b505050565b6101c36001600160a01b038416838361033f565b6000546001600160a01b031633146102245760405162461bcd60e51b815260206004820152600b60248201526a3737ba16b9bbb2b2b832b960a91b604482015260640161009d565b565b804710156102765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161009d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146102c3576040519150601f19603f3d011682016040523d82523d6000602084013e6102c8565b606091505b50509050806101c35760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161009d565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526101c3928692916000916103cf91851690849061044c565b8051909150156101c357808060200190518101906103ed919061061f565b6101c35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161009d565b606061045b8484600085610465565b90505b9392505050565b6060824710156104c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161009d565b843b6105145760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161009d565b600080866001600160a01b031685876040516105309190610671565b60006040518083038185875af1925050503d806000811461056d576040519150601f19603f3d011682016040523d82523d6000602084013e610572565b606091505b509150915061058282828661058d565b979650505050505050565b6060831561059c57508161045e565b8251156105ac5782518084602001fd5b8160405162461bcd60e51b815260040161009d919061068d565b6001600160a01b03811681146105db57600080fd5b50565b6000806000606084860312156105f357600080fd5b83356105fe816105c6565b9250602084013561060e816105c6565b929592945050506040919091013590565b60006020828403121561063157600080fd5b8151801515811461045e57600080fd5b60005b8381101561065c578181015183820152602001610644565b8381111561066b576000848401525b50505050565b60008251610683818460208701610641565b9190910192915050565b60208152600082518060208401526106ac816040850160208701610641565b601f01601f1916919091016040019291505056fea264697066735822122056b376ee363f4071f1570c6658f3c2ab7dc54fc1443007fcd68178b1cacfbcbc64736f6c63430008090033";

type TokenHolderMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenHolderMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenHolderMock__factory extends ContractFactory {
  constructor(...args: TokenHolderMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _sweeper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenHolderMock> {
    return super.deploy(_sweeper, overrides || {}) as Promise<TokenHolderMock>;
  }
  override getDeployTransaction(
    _sweeper: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sweeper, overrides || {});
  }
  override attach(address: string): TokenHolderMock {
    return super.attach(address) as TokenHolderMock;
  }
  override connect(signer: Signer): TokenHolderMock__factory {
    return super.connect(signer) as TokenHolderMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenHolderMockInterface {
    return new utils.Interface(_abi) as TokenHolderMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenHolderMock {
    return new Contract(address, _abi, signerOrProvider) as TokenHolderMock;
  }
}
