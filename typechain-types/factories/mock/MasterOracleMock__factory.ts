/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MasterOracleMock,
  MasterOracleMockInterface,
} from "../../mock/MasterOracleMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_assetIn",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_assetOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "quoteTokenToUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountInUsd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountInUsd",
        type: "uint256",
      },
    ],
    name: "quoteUsdToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104b6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063457972de1461005c5780638d0dba0014610088578063b5e9bef5146100ad578063b6466384146100c0578063cfed246b146100d3575b600080fd5b61008661006a366004610290565b6001600160a01b03909116600090815260208190526040902055565b005b61009b610096366004610290565b6100f3565b60405190815260200160405180910390f35b61009b6100bb366004610290565b6101a5565b61009b6100ce3660046102ba565b610252565b61009b6100e13660046102f6565b60006020819052908152604090205481565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561012e57600080fd5b505afa158015610142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101669190610311565b61017190600a610430565b6001600160a01b038416600090815260208190526040902054610194908461043f565b61019e919061045e565b9392505050565b6000806000846001600160a01b03166001600160a01b0316815260200190815260200160002054836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610311565b61024890600a610430565b610194908461043f565b60008061025f85846100f3565b905061026b84826101a5565b95945050505050565b80356001600160a01b038116811461028b57600080fd5b919050565b600080604083850312156102a357600080fd5b6102ac83610274565b946020939093013593505050565b6000806000606084860312156102cf57600080fd5b6102d884610274565b92506102e660208501610274565b9150604084013590509250925092565b60006020828403121561030857600080fd5b61019e82610274565b60006020828403121561032357600080fd5b815160ff8116811461019e57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561038557816000190482111561036b5761036b610334565b8085161561037857918102915b93841c939080029061034f565b509250929050565b60008261039c5750600161042a565b816103a95750600061042a565b81600181146103bf57600281146103c9576103e5565b600191505061042a565b60ff8411156103da576103da610334565b50506001821b61042a565b5060208310610133831016604e8410600b8410161715610408575081810a61042a565b610412838361034a565b806000190482111561042657610426610334565b0290505b92915050565b600061019e60ff84168361038d565b600081600019048311821515161561045957610459610334565b500290565b60008261047b57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207d57e5b12b69540ae639a3bb58378ba4790e2220c1bb20fdd2a58b8083492a2364736f6c63430008090033";

type MasterOracleMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterOracleMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterOracleMock__factory extends ContractFactory {
  constructor(...args: MasterOracleMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterOracleMock> {
    return super.deploy(overrides || {}) as Promise<MasterOracleMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MasterOracleMock {
    return super.attach(address) as MasterOracleMock;
  }
  override connect(signer: Signer): MasterOracleMock__factory {
    return super.connect(signer) as MasterOracleMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterOracleMockInterface {
    return new utils.Interface(_abi) as MasterOracleMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterOracleMock {
    return new Contract(address, _abi, signerOrProvider) as MasterOracleMock;
  }
}
