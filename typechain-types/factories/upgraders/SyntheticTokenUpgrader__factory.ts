/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SyntheticTokenUpgrader,
  SyntheticTokenUpgraderInterface,
} from "../../upgraders/SyntheticTokenUpgrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multicall",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014dd380380620014dd833981016040819052620000349162000176565b6200003f3362000051565b6200004a81620000a1565b50620001a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000f8565b620001738162000051565b50565b6000602082840312156200018957600080fd5b81516001600160a01b0381168114620001a157600080fd5b9392505050565b61132580620001b86000396000f3fe6080604052600436106100765760003560e01c80631cdcf85a1461007b578063204e1c7a146100b9578063715018a6146100d95780637eff275e146100f05780638da5cb5b146101105780639623609d1461012557806399a88ec414610138578063f2fde38b14610158578063f3b7dead14610178575b600080fd5b34801561008757600080fd5b506100a373ca11bde05977b3631167028862be2a173976ca1181565b6040516100b09190610de3565b60405180910390f35b3480156100c557600080fd5b506100a36100d4366004610e0c565b610198565b3480156100e557600080fd5b506100ee610229565b005b3480156100fc57600080fd5b506100ee61010b366004610e30565b61026d565b34801561011c57600080fd5b506100a36102fe565b6100ee610133366004610e69565b61030d565b34801561014457600080fd5b506100ee610153366004610e30565b6103da565b34801561016457600080fd5b506100ee610173366004610e0c565b6104a1565b34801561018457600080fd5b506100a3610193366004610e0c565b610541565b6000806000836001600160a01b03166040516101be90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b50915091508161020d57600080fd5b808060200190518101906102219190610efb565b949350505050565b336102326102fe565b6001600160a01b0316146102615760405162461bcd60e51b815260040161025890610f18565b60405180910390fd5b61026b6000610567565b565b336102766102fe565b6001600160a01b03161461029c5760405162461bcd60e51b815260040161025890610f18565b6040516308f2839760e41b81526001600160a01b03831690638f283970906102c8908490600401610de3565b600060405180830381600087803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b336103166102fe565b6001600160a01b03161461033c5760405162461bcd60e51b815260040161025890610f18565b60006103466105b7565b905060006103548683610846565b9050856001600160a01b0316634f1ef286348787876040518563ffffffff1660e01b815260040161038793929190610f4d565b6000604051808303818588803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050505060006103c58784610846565b90506103d182826109cb565b50505050505050565b336103e36102fe565b6001600160a01b0316146104095760405162461bcd60e51b815260040161025890610f18565b60006104136105b7565b905060006104218483610846565b604051631b2ce7f360e11b81529091506001600160a01b03851690633659cfe690610450908690600401610de3565b600060405180830381600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b50505050600061048e8584610846565b905061049a82826109cb565b5050505050565b336104aa6102fe565b6001600160a01b0316146104d05760405162461bcd60e51b815260040161025890610f18565b6001600160a01b0381166105355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610258565b61053e81610567565b50565b6000806000836001600160a01b03166040516101be906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160088082526101208201909252606091816020015b60608152602001906001900390816105d0579050506040805160048152602481019091526020810180516001600160e01b03166306fdde0360e01b179052815191925090829060009061062557610625610fa3565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166395d89b4160e01b17905281518290600190811061067157610671610fa3565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b031663313ce56760e01b1790528151829060029081106106bd576106bd610fa3565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166318160ddd60e01b17905281518290600390811061070957610709610fa3565b6020908102919091018101919091526040805160048082526024820190925291820180516001600160e01b03166304dac56560e41b1790528251839190811061075457610754610fa3565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316637c3a00fd60e01b1790528151829060059081106107a0576107a0610fa3565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316631f1b131360e31b1790528151829060069081106107ec576107ec610fa3565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166308bcf8b560e21b17905281518290600790811061083857610838610fa3565b602002602001018190525090565b805160609060008167ffffffffffffffff81111561086657610866610f8d565b6040519080825280602002602001820160405280156108ac57816020015b6040805180820190915260008152606060208201528152602001906001900390816108845790505b50905060005b8281101561093357858282815181106108cd576108cd610fa3565b60209081029190910101516001600160a01b03909116905284518590829081106108f9576108f9610fa3565b602002602001015182828151811061091357610913610fa3565b6020026020010151602001819052508061092c90610fb9565b90506108b2565b50604051631296dd2160e11b815273ca11bde05977b3631167028862be2a173976ca119063252dba429061096b908490600401611012565b600060405180830381600087803b15801561098557600080fd5b505af1158015610999573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109c1919081019061112c565b9695505050505050565b6109d9828260006001610a12565b6109e68282600280610aed565b6109f4828260036005610bc6565b610a018282600680610c93565b610a0e8282600780610d42565b5050565b815b81811161049a576000858281518110610a2f57610a2f610fa3565b6020026020010151806020019051810190610a4a9190611211565b90506000858381518110610a6057610a60610fa3565b6020026020010151806020019051810190610a7b9190611211565b90508080519060200120828051906020012014610ada5760405162461bcd60e51b815260206004820152601d60248201527f616e2d737472696e672d73696d706c652d6669656c642d6661696c65640000006044820152606401610258565b505080610ae690610fb9565b9050610a14565b60ff82165b8160ff16811161049a576000858281518110610b1057610b10610fa3565b6020026020010151806020019051810190610b2b919061125a565b60ff1690506000858381518110610b4457610b44610fa3565b6020026020010151806020019051810190610b5f919061125a565b60ff169050808214610bb35760405162461bcd60e51b815260206004820152601c60248201527f616e2d75696e74382d73696d706c652d6669656c642d6661696c6564000000006044820152606401610258565b505080610bbf90610fb9565b9050610af2565b815b81811161049a576000858281518110610be357610be3610fa3565b6020026020010151806020019051810190610bfe919061127d565b90506000858381518110610c1457610c14610fa3565b6020026020010151806020019051810190610c2f919061127d565b9050808214610c805760405162461bcd60e51b815260206004820152601e60248201527f616e2d75696e743235362d73696d706c652d6669656c642d6661696c656400006044820152606401610258565b505080610c8c90610fb9565b9050610bc8565b815b81811161049a576000858281518110610cb057610cb0610fa3565b6020026020010151806020019051810190610ccb9190610efb565b90506000858381518110610ce157610ce1610fa3565b6020026020010151806020019051810190610cfc9190610efb565b9050806001600160a01b0316826001600160a01b031614610d2f5760405162461bcd60e51b815260040161025890611296565b505080610d3b90610fb9565b9050610c95565b815b81811161049a576000858281518110610d5f57610d5f610fa3565b6020026020010151806020019051810190610d7a91906112cd565b90506000858381518110610d9057610d90610fa3565b6020026020010151806020019051810190610dab91906112cd565b905080151582151514610dd05760405162461bcd60e51b815260040161025890611296565b505080610ddc90610fb9565b9050610d44565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461053e57600080fd5b600060208284031215610e1e57600080fd5b8135610e2981610df7565b9392505050565b60008060408385031215610e4357600080fd5b8235610e4e81610df7565b91506020830135610e5e81610df7565b809150509250929050565b60008060008060608587031215610e7f57600080fd5b8435610e8a81610df7565b93506020850135610e9a81610df7565b9250604085013567ffffffffffffffff80821115610eb757600080fd5b818701915087601f830112610ecb57600080fd5b813581811115610eda57600080fd5b886020828501011115610eec57600080fd5b95989497505060200194505050565b600060208284031215610f0d57600080fd5b8151610e2981610df7565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610fdb57634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610ffd578181015183820152602001610fe5565b8381111561100c576000848401525b50505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561109e57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061107b82828801858d01610fe2565b96890196601f91909101601f191694909401909301925090860190600101611039565b509098975050505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156110d5576110d5610f8d565b604052919050565b600067ffffffffffffffff8311156110f7576110f7610f8d565b61110a601f8401601f19166020016110ac565b905082815283838301111561111e57600080fd5b610e29836020830184610fe2565b600080604080848603121561114057600080fd5b8351925060208085015167ffffffffffffffff8082111561116057600080fd5b818701915087601f83011261117457600080fd5b81518181111561118657611186610f8d565b8060051b6111958582016110ac565b918252838101850191858101908b8411156111af57600080fd5b86860192505b838310156111ff578251858111156111cd5760008081fd5b8601603f81018d136111df5760008081fd5b6111ef8d898301518b84016110dd565b83525091860191908601906111b5565b80985050505050505050509250929050565b60006020828403121561122357600080fd5b815167ffffffffffffffff81111561123a57600080fd5b8201601f8101841361124b57600080fd5b610221848251602084016110dd565b60006020828403121561126c57600080fd5b815160ff81168114610e2957600080fd5b60006020828403121561128f57600080fd5b5051919050565b6020808252601e908201527f616e2d616464726573732d73696d706c652d6669656c642d6661696c65640000604082015260600190565b6000602082840312156112df57600080fd5b81518015158114610e2957600080fdfea2646970667358221220fc984e36ad60b4552392f1e015736fb32db078f03a944426293720132ae7d0a564736f6c63430008090033";

type SyntheticTokenUpgraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SyntheticTokenUpgraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SyntheticTokenUpgrader__factory extends ContractFactory {
  constructor(...args: SyntheticTokenUpgraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SyntheticTokenUpgrader> {
    return super.deploy(
      _owner,
      overrides || {}
    ) as Promise<SyntheticTokenUpgrader>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): SyntheticTokenUpgrader {
    return super.attach(address) as SyntheticTokenUpgrader;
  }
  override connect(signer: Signer): SyntheticTokenUpgrader__factory {
    return super.connect(signer) as SyntheticTokenUpgrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyntheticTokenUpgraderInterface {
    return new utils.Interface(_abi) as SyntheticTokenUpgraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SyntheticTokenUpgrader {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SyntheticTokenUpgrader;
  }
}
