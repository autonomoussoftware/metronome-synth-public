/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ControllerUpgrader,
  ControllerUpgraderInterface,
} from "../../upgraders/ControllerUpgrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multicall",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200129d3803806200129d833981016040819052620000349162000176565b6200003f3362000051565b6200004a81620000a1565b50620001a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000f8565b620001738162000051565b50565b6000602082840312156200018957600080fd5b81516001600160a01b0381168114620001a157600080fd5b9392505050565b6110e580620001b86000396000f3fe6080604052600436106100765760003560e01c80631cdcf85a1461007b578063204e1c7a146100b9578063715018a6146100d95780637eff275e146100f05780638da5cb5b146101105780639623609d1461012557806399a88ec414610138578063f2fde38b14610158578063f3b7dead14610178575b600080fd5b34801561008757600080fd5b506100a373ca11bde05977b3631167028862be2a173976ca1181565b6040516100b09190610c7b565b60405180910390f35b3480156100c557600080fd5b506100a36100d4366004610ca4565b610198565b3480156100e557600080fd5b506100ee610229565b005b3480156100fc57600080fd5b506100ee61010b366004610cc8565b61026d565b34801561011c57600080fd5b506100a36102fe565b6100ee610133366004610d01565b61030d565b34801561014457600080fd5b506100ee610153366004610cc8565b6103da565b34801561016457600080fd5b506100ee610173366004610ca4565b6104a1565b34801561018457600080fd5b506100a3610193366004610ca4565b610541565b6000806000836001600160a01b03166040516101be90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b50915091508161020d57600080fd5b808060200190518101906102219190610d93565b949350505050565b336102326102fe565b6001600160a01b0316146102615760405162461bcd60e51b815260040161025890610db0565b60405180910390fd5b61026b6000610567565b565b336102766102fe565b6001600160a01b03161461029c5760405162461bcd60e51b815260040161025890610db0565b6040516308f2839760e41b81526001600160a01b03831690638f283970906102c8908490600401610c7b565b600060405180830381600087803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b336103166102fe565b6001600160a01b03161461033c5760405162461bcd60e51b815260040161025890610db0565b60006103466105b7565b90506000610354868361092a565b9050856001600160a01b0316634f1ef286348787876040518563ffffffff1660e01b815260040161038793929190610de5565b6000604051808303818588803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050505060006103c5878461092a565b90506103d18282610aaf565b50505050505050565b336103e36102fe565b6001600160a01b0316146104095760405162461bcd60e51b815260040161025890610db0565b60006104136105b7565b90506000610421848361092a565b604051631b2ce7f360e11b81529091506001600160a01b03851690633659cfe690610450908690600401610c7b565b600060405180830381600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b50505050600061048e858461092a565b905061049a8282610aaf565b5050505050565b336104aa6102fe565b6001600160a01b0316146104d05760405162461bcd60e51b815260040161025890610db0565b6001600160a01b0381166105355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610258565b61053e81610567565b50565b6000806000836001600160a01b03166040516101be906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051600b8082526101808201909252606091816020015b60608152602001906001900390816105d0579050506040805160048152602481019091526020810180516001600160e01b031663f609280960e01b179052815191925090829060009061062557610625610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166367a5279360e01b17905281518290600190811061067157610671610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316632a9133c160e01b1790528151829060029081106106bd576106bd610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316631d283f4f60e31b17905281518290600390811061070957610709610e3b565b6020908102919091018101919091526040805160048082526024820190925291820180516001600160e01b0316631f03d67d60e21b1790528251839190811061075457610754610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166354cf2aeb60e01b1790528151829060059081106107a0576107a0610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b031663b2d90ebb60e01b1790528151829060069081106107ec576107ec610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b031663757f67fd60e11b17905281518290600790811061083857610838610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316632dd6adb560e01b17905281518290600890811061088457610884610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316637556d1c160e11b1790528151829060099081106108d0576108d0610e3b565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166361d027b360e01b17905281518290600a90811061091c5761091c610e3b565b602002602001018190525090565b805160609060008167ffffffffffffffff81111561094a5761094a610e25565b60405190808252806020026020018201604052801561099057816020015b6040805180820190915260008152606060208201528152602001906001900390816109685790505b50905060005b82811015610a1757858282815181106109b1576109b1610e3b565b60209081029190910101516001600160a01b03909116905284518590829081106109dd576109dd610e3b565b60200260200101518282815181106109f7576109f7610e3b565b60200260200101516020018190525080610a1090610e51565b9050610996565b50604051631296dd2160e11b815273ca11bde05977b3631167028862be2a173976ca119063252dba4290610a4f908490600401610eaa565b600060405180830381600087803b158015610a6957600080fd5b505af1158015610a7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa59190810190610f75565b9695505050505050565b610abd828260006008610acf565b610acb82826009600a610b9c565b5050565b815b81811161049a576000858281518110610aec57610aec610e3b565b6020026020010151806020019051810190610b079190611096565b90506000858381518110610b1d57610b1d610e3b565b6020026020010151806020019051810190610b389190611096565b9050808214610b895760405162461bcd60e51b815260206004820152601e60248201527f616e2d75696e743235362d73696d706c652d6669656c642d6661696c656400006044820152606401610258565b505080610b9590610e51565b9050610ad1565b815b81811161049a576000858281518110610bb957610bb9610e3b565b6020026020010151806020019051810190610bd49190610d93565b90506000858381518110610bea57610bea610e3b565b6020026020010151806020019051810190610c059190610d93565b9050806001600160a01b0316826001600160a01b031614610c685760405162461bcd60e51b815260206004820152601e60248201527f616e2d616464726573732d73696d706c652d6669656c642d6661696c656400006044820152606401610258565b505080610c7490610e51565b9050610b9e565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461053e57600080fd5b600060208284031215610cb657600080fd5b8135610cc181610c8f565b9392505050565b60008060408385031215610cdb57600080fd5b8235610ce681610c8f565b91506020830135610cf681610c8f565b809150509250929050565b60008060008060608587031215610d1757600080fd5b8435610d2281610c8f565b93506020850135610d3281610c8f565b9250604085013567ffffffffffffffff80821115610d4f57600080fd5b818701915087601f830112610d6357600080fd5b813581811115610d7257600080fd5b886020828501011115610d8457600080fd5b95989497505060200194505050565b600060208284031215610da557600080fd5b8151610cc181610c8f565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e7357634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610e95578181015183820152602001610e7d565b83811115610ea4576000848401525b50505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610f3657888303603f19018552815180516001600160a01b0316845287015187840187905280518785018190526060610f1382828801858d01610e7a565b96890196601f91909101601f191694909401909301925090860190600101610ed1565b509098975050505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f6d57610f6d610e25565b604052919050565b6000806040808486031215610f8957600080fd5b8351925060208085015167ffffffffffffffff80821115610fa957600080fd5b8187019150601f8881840112610fbe57600080fd5b825182811115610fd057610fd0610e25565b8060051b610fdf868201610f44565b918252848101860191868101908c841115610ff957600080fd5b87870192505b83831015611083578251868111156110175760008081fd5b8701603f81018e136110295760008081fd5b888101518781111561103d5761103d610e25565b61104e818801601f19168b01610f44565b8181528f8c8385010111156110635760008081fd5b611072828c83018e8601610e7a565b845250509187019190870190610fff565b8099505050505050505050509250929050565b6000602082840312156110a857600080fd5b505191905056fea2646970667358221220a3a4170c52d89006307b8c8d0d1976dc227803df149a1ae622a0872018a3053064736f6c63430008090033";

type ControllerUpgraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerUpgraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ControllerUpgrader__factory extends ContractFactory {
  constructor(...args: ControllerUpgraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ControllerUpgrader> {
    return super.deploy(_owner, overrides || {}) as Promise<ControllerUpgrader>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): ControllerUpgrader {
    return super.attach(address) as ControllerUpgrader;
  }
  override connect(signer: Signer): ControllerUpgrader__factory {
    return super.connect(signer) as ControllerUpgrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerUpgraderInterface {
    return new utils.Interface(_abi) as ControllerUpgraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ControllerUpgrader {
    return new Contract(address, _abi, signerOrProvider) as ControllerUpgrader;
  }
}
