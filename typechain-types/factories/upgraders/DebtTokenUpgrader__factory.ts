/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DebtTokenUpgrader,
  DebtTokenUpgraderInterface,
} from "../../upgraders/DebtTokenUpgrader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multicall",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013ba380380620013ba833981016040819052620000349162000176565b6200003f3362000051565b6200004a81620000a1565b50620001a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000f8565b620001738162000051565b50565b6000602082840312156200018957600080fd5b81516001600160a01b0381168114620001a157600080fd5b9392505050565b61120280620001b86000396000f3fe6080604052600436106100765760003560e01c80631cdcf85a1461007b578063204e1c7a146100b9578063715018a6146100d95780637eff275e146100f05780638da5cb5b146101105780639623609d1461012557806399a88ec414610138578063f2fde38b14610158578063f3b7dead14610178575b600080fd5b34801561008757600080fd5b506100a373ca11bde05977b3631167028862be2a173976ca1181565b6040516100b09190610d19565b60405180910390f35b3480156100c557600080fd5b506100a36100d4366004610d42565b610198565b3480156100e557600080fd5b506100ee610229565b005b3480156100fc57600080fd5b506100ee61010b366004610d66565b61026d565b34801561011c57600080fd5b506100a36102fe565b6100ee610133366004610d9f565b61030d565b34801561014457600080fd5b506100ee610153366004610d66565b6103da565b34801561016457600080fd5b506100ee610173366004610d42565b6104a1565b34801561018457600080fd5b506100a3610193366004610d42565b610541565b6000806000836001600160a01b03166040516101be90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b50915091508161020d57600080fd5b808060200190518101906102219190610e31565b949350505050565b336102326102fe565b6001600160a01b0316146102615760405162461bcd60e51b815260040161025890610e4e565b60405180910390fd5b61026b6000610567565b565b336102766102fe565b6001600160a01b03161461029c5760405162461bcd60e51b815260040161025890610e4e565b6040516308f2839760e41b81526001600160a01b03831690638f283970906102c8908490600401610d19565b600060405180830381600087803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b336103166102fe565b6001600160a01b03161461033c5760405162461bcd60e51b815260040161025890610e4e565b60006103466105b7565b9050600061035486836107fa565b9050856001600160a01b0316634f1ef286348787876040518563ffffffff1660e01b815260040161038793929190610e83565b6000604051808303818588803b1580156103a057600080fd5b505af11580156103b4573d6000803e3d6000fd5b505050505060006103c587846107fa565b90506103d1828261097f565b50505050505050565b336103e36102fe565b6001600160a01b0316146104095760405162461bcd60e51b815260040161025890610e4e565b60006104136105b7565b9050600061042184836107fa565b604051631b2ce7f360e11b81529091506001600160a01b03851690633659cfe690610450908690600401610d19565b600060405180830381600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b50505050600061048e85846107fa565b905061049a828261097f565b5050505050565b336104aa6102fe565b6001600160a01b0316146104d05760405162461bcd60e51b815260040161025890610e4e565b6001600160a01b0381166105355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610258565b61053e81610567565b50565b6000806000836001600160a01b03166040516101be906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160078082526101008201909252606091816020015b60608152602001906001900390816105d0579050506040805160048152602481019091526020810180516001600160e01b03166318160ddd60e01b179052815191925090829060009061062557610625610ed9565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b031663565f3d4f60e01b17905281518290600190811061067157610671610ed9565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b031663bb8c631f60e01b1790528151829060029081106106bd576106bd610ed9565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b031663313ce56760e01b17905281518290600390811061070957610709610ed9565b6020908102919091018101919091526040805160048082526024820190925291820180516001600160e01b03166306fdde0360e01b1790528251839190811061075457610754610ed9565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b03166395d89b4160e01b1790528151829060059081106107a0576107a0610ed9565b60209081029190910181019190915260408051600481526024810190915290810180516001600160e01b0316634118766b60e11b1790528151829060069081106107ec576107ec610ed9565b602002602001018190525090565b805160609060008167ffffffffffffffff81111561081a5761081a610ec3565b60405190808252806020026020018201604052801561086057816020015b6040805180820190915260008152606060208201528152602001906001900390816108385790505b50905060005b828110156108e7578582828151811061088157610881610ed9565b60209081029190910101516001600160a01b03909116905284518590829081106108ad576108ad610ed9565b60200260200101518282815181106108c7576108c7610ed9565b602002602001015160200181905250806108e090610eef565b9050610866565b50604051631296dd2160e11b815273ca11bde05977b3631167028862be2a173976ca119063252dba429061091f908490600401610f48565b600060405180830381600087803b15801561093957600080fd5b505af115801561094d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109759190810190611062565b9695505050505050565b61098d8282600060026109b9565b61099a8282600380610a86565b6109a8828260046005610b5f565b6109b58282600680610c3a565b5050565b815b81811161049a5760008582815181106109d6576109d6610ed9565b60200260200101518060200190518101906109f19190611147565b90506000858381518110610a0757610a07610ed9565b6020026020010151806020019051810190610a229190611147565b9050808214610a735760405162461bcd60e51b815260206004820152601e60248201527f616e2d75696e743235362d73696d706c652d6669656c642d6661696c656400006044820152606401610258565b505080610a7f90610eef565b90506109bb565b60ff82165b8160ff16811161049a576000858281518110610aa957610aa9610ed9565b6020026020010151806020019051810190610ac49190611160565b60ff1690506000858381518110610add57610add610ed9565b6020026020010151806020019051810190610af89190611160565b60ff169050808214610b4c5760405162461bcd60e51b815260206004820152601c60248201527f616e2d75696e74382d73696d706c652d6669656c642d6661696c6564000000006044820152606401610258565b505080610b5890610eef565b9050610a8b565b815b81811161049a576000858281518110610b7c57610b7c610ed9565b6020026020010151806020019051810190610b979190611183565b90506000858381518110610bad57610bad610ed9565b6020026020010151806020019051810190610bc89190611183565b90508080519060200120828051906020012014610c275760405162461bcd60e51b815260206004820152601d60248201527f616e2d737472696e672d73696d706c652d6669656c642d6661696c65640000006044820152606401610258565b505080610c3390610eef565b9050610b61565b815b81811161049a576000858281518110610c5757610c57610ed9565b6020026020010151806020019051810190610c729190610e31565b90506000858381518110610c8857610c88610ed9565b6020026020010151806020019051810190610ca39190610e31565b9050806001600160a01b0316826001600160a01b031614610d065760405162461bcd60e51b815260206004820152601e60248201527f616e2d616464726573732d73696d706c652d6669656c642d6661696c656400006044820152606401610258565b505080610d1290610eef565b9050610c3c565b6001600160a01b0391909116815260200190565b6001600160a01b038116811461053e57600080fd5b600060208284031215610d5457600080fd5b8135610d5f81610d2d565b9392505050565b60008060408385031215610d7957600080fd5b8235610d8481610d2d565b91506020830135610d9481610d2d565b809150509250929050565b60008060008060608587031215610db557600080fd5b8435610dc081610d2d565b93506020850135610dd081610d2d565b9250604085013567ffffffffffffffff80821115610ded57600080fd5b818701915087601f830112610e0157600080fd5b813581811115610e1057600080fd5b886020828501011115610e2257600080fd5b95989497505060200194505050565b600060208284031215610e4357600080fd5b8151610d5f81610d2d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610f1157634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610f33578181015183820152602001610f1b565b83811115610f42576000848401525b50505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610fd457888303603f19018552815180516001600160a01b0316845287015187840187905280518785018190526060610fb182828801858d01610f18565b96890196601f91909101601f191694909401909301925090860190600101610f6f565b509098975050505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561100b5761100b610ec3565b604052919050565b600067ffffffffffffffff83111561102d5761102d610ec3565b611040601f8401601f1916602001610fe2565b905082815283838301111561105457600080fd5b610d5f836020830184610f18565b600080604080848603121561107657600080fd5b8351925060208085015167ffffffffffffffff8082111561109657600080fd5b818701915087601f8301126110aa57600080fd5b8151818111156110bc576110bc610ec3565b8060051b6110cb858201610fe2565b918252838101850191858101908b8411156110e557600080fd5b86860192505b83831015611135578251858111156111035760008081fd5b8601603f81018d136111155760008081fd5b6111258d898301518b8401611013565b83525091860191908601906110eb565b80985050505050505050509250929050565b60006020828403121561115957600080fd5b5051919050565b60006020828403121561117257600080fd5b815160ff81168114610d5f57600080fd5b60006020828403121561119557600080fd5b815167ffffffffffffffff8111156111ac57600080fd5b8201601f810184136111bd57600080fd5b6102218482516020840161101356fea2646970667358221220b257cd181079dffa74549cafd95b8d04989e632b04a3500ac221d31d91f68e5364736f6c63430008090033";

type DebtTokenUpgraderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebtTokenUpgraderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebtTokenUpgrader__factory extends ContractFactory {
  constructor(...args: DebtTokenUpgraderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebtTokenUpgrader> {
    return super.deploy(_owner, overrides || {}) as Promise<DebtTokenUpgrader>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): DebtTokenUpgrader {
    return super.attach(address) as DebtTokenUpgrader;
  }
  override connect(signer: Signer): DebtTokenUpgrader__factory {
    return super.connect(signer) as DebtTokenUpgrader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebtTokenUpgraderInterface {
    return new utils.Interface(_abi) as DebtTokenUpgraderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebtTokenUpgrader {
    return new Contract(address, _abi, signerOrProvider) as DebtTokenUpgrader;
  }
}
