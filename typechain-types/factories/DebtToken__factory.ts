/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DebtToken, DebtTokenInterface } from "../DebtToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accrueInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "_interestAmountAccrued",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debtIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "_governor",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimestampAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "_syntheticToken",
        type: "address",
      },
    ],
    name: "setSyntheticToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syntheticToken",
    outputs: [
      {
        internalType: "contract ISyntheticToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e52806100206000396000f3fe60806040526004361061014f5760003560e01c80638230ecd6116100b6578063a9059cbb1161006f578063a9059cbb14610404578063bb8c631f1461041f578063dd62ed3e14610435578063de7ea79d14610450578063f77c479114610470578063ffa1ad741461049657610197565b80638230ecd61461037a57806392eefe9b1461039a57806395d89b41146103ba5780639dc29fac146103cf578063a457c2d7146102e4578063a6afed95146103ef57610197565b8063313ce56711610108578063313ce567146102b857806339509351146102e457806340c10f1914610304578063565f3d4f1461032457806362c067671461033a57806370a082311461035a57610197565b806306fdde03146101d6578063095ea7b3146102015780630c340a241461023157806318160ddd1461025357806320b74e731461027657806323b872dd1461029857610197565b366101975760405162461bcd60e51b81526020600482015260136024820152721c9958d95a5d994b5b9bdd0b585b1b1bddd959606a1b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527319985b1b189858dacb5b9bdd0b585b1b1bddd95960621b604482015260640161018e565b3480156101e257600080fd5b506101eb6104c7565b6040516101f89190611901565b60405180910390f35b34801561020d57600080fd5b5061022161021c366004611949565b610555565b60405190151581526020016101f8565b34801561023d57600080fd5b50610246610599565b6040516101f89190611975565b34801561025f57600080fd5b50610268610625565b6040519081526020016101f8565b34801561028257600080fd5b50610296610291366004611989565b610648565b005b3480156102a457600080fd5b506102216102b33660046119a6565b6108de565b3480156102c457600080fd5b506035546102d29060ff1681565b60405160ff90911681526020016101f8565b3480156102f057600080fd5b506102216102ff366004611949565b610922565b34801561031057600080fd5b5061029661031f366004611949565b610967565b34801561033057600080fd5b5061026860395481565b34801561034657600080fd5b506102966103553660046119a6565b6109a8565b34801561036657600080fd5b50610268610375366004611989565b6109e1565b34801561038657600080fd5b50603854610246906001600160a01b031681565b3480156103a657600080fd5b506102966103b5366004611989565b610a57565b3480156103c657600080fd5b506101eb610b0f565b3480156103db57600080fd5b506102966103ea366004611949565b610b1c565b3480156103fb57600080fd5b50610268610b9e565b34801561041057600080fd5b506102216102b3366004611949565b34801561042b57600080fd5b50610268603a5481565b34801561044157600080fd5b506102686102ff3660046119e7565b34801561045c57600080fd5b5061029661046b366004611a78565b610c1d565b34801561047c57600080fd5b50600054610246906201000090046001600160a01b031681565b3480156104a257600080fd5b506101eb604051806040016040528060058152602001640312e302e360dc1b81525081565b603680546104d490611b0d565b80601f016020809104026020016040519081016040528092919081815260200182805461050090611b0d565b801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b505050505081565b60405162461bcd60e51b8152602060048201526016602482015275185c1c1c9bdd985b0b5b9bdd0b5cdd5c1c1bdc9d195960521b604482015260009060640161018e565b60008060029054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611b48565b905090565b600080610630610d48565b50509050806034546106429190611b7b565b91505090565b610650610599565b6001600160a01b0316336001600160a01b0316146106805760405162461bcd60e51b815260040161018e90611b93565b6001600160a01b0381166106ca5760405162461bcd60e51b81526020600482015260116024820152701cde5b9d1a195d1a58cb5a5ccb5b9d5b1b607a1b604482015260640161018e565b6038546001600160a01b0316156107235760405162461bcd60e51b815260206004820152601a60248201527f73796e7468657469632d616c72656164792d61737369676e6564000000000000604482015260640161018e565b306001600160a01b0316816001600160a01b031663f8d898986040518163ffffffff1660e01b815260040160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190611b48565b6001600160a01b0316146107f45760405162461bcd60e51b815260206004820152601c60248201527f696e76616c69642d73796e7468657469632d646562742d746f6b656e00000000604482015260640161018e565b806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561082d57600080fd5b505afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190611bb9565b60355460ff9081169116146108bc5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c69642d73796e7468657469632d646563696d616c73000000000000604482015260640161018e565b603880546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b81526020600482015260166024820152751d1c985b9cd9995c8b5b9bdd0b5cdd5c1c1bdc9d195960521b604482015260009060640161018e565b60405162461bcd60e51b8152602060048201526017602482015276185b1b1bddd85b98d94b5b9bdd0b5cdd5c1c1bdc9d1959604a1b604482015260009060640161018e565b6038546001600160a01b0316336001600160a01b03161461099a5760405162461bcd60e51b815260040161018e90611bd6565b6109a48282610e4b565b5050565b6109b061108b565b6001600160a01b0383166109cd576109c882826110c5565b505050565b6109c86001600160a01b03841683836111de565b6001600160a01b038116600090815260326020526040812054610a0657506000919050565b6000610a10610d48565b506001600160a01b0385166000908152603360209081526040808320546032909252909120549193509150610a46908390611c03565b610a509190611c22565b9392505050565b610a5f610599565b6001600160a01b0316336001600160a01b031614610a8f5760405162461bcd60e51b815260040161018e90611b93565b6001600160a01b038116610ae55760405162461bcd60e51b815260206004820152601e60248201527f6e65772d636f6e74726f6c6c65722d616464726573732d69732d7a65726f0000604482015260640161018e565b600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b603780546104d490611b0d565b6000546201000090046001600160a01b0316336001600160a01b03161480610b5757506038546001600160a01b0316336001600160a01b0316145b610b945760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd0b585d5d1a1bdc9a5e995960921b604482015260640161018e565b6109a48282611230565b6038546000906001600160a01b0316336001600160a01b031614610bd45760405162461bcd60e51b815260040161018e90611bd6565b600080610bdf610d48565b6039549295509093509150811415610bfa5760009250505090565b8260346000828254610c0c9190611b7b565b9091555050603a9190915560395590565b600054610100900460ff1680610c36575060005460ff16155b610c525760405162461bcd60e51b815260040161018e90611c44565b600054610100900460ff16158015610c74576000805461ffff19166101011790555b6001600160a01b038216610cca5760405162461bcd60e51b815260206004820152601a60248201527f636f6e74726f6c6c65722d616464726573732d69732d7a65726f000000000000604482015260640161018e565b610cd261148b565b6000805462010000600160b01b031916620100006001600160a01b03851602179055610d0060368888611838565b50610d0d60378686611838565b506035805460ff191660ff851617905542603955670de0b6b3a7640000603a558015610d3f576000805461ff00191690555b50505050505050565b6000806000429050806039541415610d68576000603a5492509250909192565b600060395482610d789190611c92565b603860009054906101000a90046001600160a01b03166001600160a01b0316639cc820da6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dc657600080fd5b505afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe9190611ca9565b610e089190611c03565b9050610e1f603454826114f790919063ffffffff16565b9350610e36603a54826114f790919063ffffffff16565b603a54610e439190611b7b565b925050909192565b8160008060029054906101000a90046001600160a01b03166001600160a01b0316633605b51b6040518163ffffffff1660e01b815260040160006040518083038186803b158015610e9b57600080fd5b505afa158015610eaf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ed79190810190611ce8565b805190915060005b81811015610f7a57828181518110610ef957610ef9611dad565b6020908102919091010151603854604051626cc3c360e61b81526001600160a01b0391821660048201528682166024820152911690631b30f0c090604401600060405180830381600087803b158015610f5157600080fd5b505af1158015610f65573d6000803e3d6000fd5b5050505080610f7390611dc3565b9050610edf565b506001600160a01b038516610fcc5760405162461bcd60e51b81526020600482015260186024820152776d696e742d746f2d7468652d7a65726f2d6164647265737360401b604482015260640161018e565b6000610fd7866109e1565b90508460346000828254610feb9190611b7b565b90915550506001600160a01b03861660009081526032602052604081208054879290611018908490611b7b565b9091555050603a546001600160a01b0387166000818152603360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110719089815260200190565b60405180910390a3611083868261154c565b505050505050565b611093610599565b6001600160a01b0316336001600160a01b0316146110c35760405162461bcd60e51b815260040161018e90611b93565b565b804710156111155760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161018e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611162576040519150601f19603f3d011682016040523d82523d6000602084013e611167565b606091505b50509050806109c85760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161018e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109c89084906115b4565b8160008060029054906101000a90046001600160a01b03166001600160a01b0316633605b51b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561128057600080fd5b505afa158015611294573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112bc9190810190611ce8565b805190915060005b8181101561135f578281815181106112de576112de611dad565b6020908102919091010151603854604051626cc3c360e61b81526001600160a01b0391821660048201528682166024820152911690631b30f0c090604401600060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b505050508061135890611dc3565b90506112c4565b506001600160a01b0385166113b65760405162461bcd60e51b815260206004820152601a60248201527f6275726e2d66726f6d2d7468652d7a65726f2d61646472657373000000000000604482015260640161018e565b60006113c1866109e1565b9050848110156114135760405162461bcd60e51b815260206004820152601b60248201527f6275726e2d616d6f756e742d657863656564732d62616c616e63650000000000604482015260640161018e565b6001600160a01b03861660008181526032602090815260408083208986039055603a546033835281842055603480548a90039055518881529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361108386611486886109e1565b611686565b600054610100900460ff16806114a4575060005460ff16155b6114c05760405162461bcd60e51b815260040161018e90611c44565b600054610100900460ff161580156114e2576000805461ffff19166101011790555b80156114f4576000805461ff00191690555b50565b6000821580611504575081155b1561151157506000611546565b670de0b6b3a7640000611525600282611c22565b61152f8486611c03565b6115399190611b7b565b6115439190611c22565b90505b92915050565b806109a457600054604051631dc2da6d60e21b8152620100009091046001600160a01b03169063770b69b490611586908590600401611975565b600060405180830381600087803b1580156115a057600080fd5b505af1158015611083573d6000803e3d6000fd5b6000611609826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116c09092919063ffffffff16565b8051909150156109c857808060200190518101906116279190611dde565b6109c85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018e565b806109a457600054604051631d71be3b60e21b8152620100009091046001600160a01b0316906375c6f8ec90611586908590600401611975565b60606116cf84846000856116d7565b949350505050565b6060824710156117385760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161018e565b843b6117865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018e565b600080866001600160a01b031685876040516117a29190611e00565b60006040518083038185875af1925050503d80600081146117df576040519150601f19603f3d011682016040523d82523d6000602084013e6117e4565b606091505b50915091506117f48282866117ff565b979650505050505050565b6060831561180e575081610a50565b82511561181e5782518084602001fd5b8160405162461bcd60e51b815260040161018e9190611901565b82805461184490611b0d565b90600052602060002090601f01602090048101928261186657600085556118ac565b82601f1061187f5782800160ff198235161785556118ac565b828001600101855582156118ac579182015b828111156118ac578235825591602001919060010190611891565b506118b89291506118bc565b5090565b5b808211156118b857600081556001016118bd565b60005b838110156118ec5781810151838201526020016118d4565b838111156118fb576000848401525b50505050565b60208152600082518060208401526119208160408501602087016118d1565b601f01601f19169190910160400192915050565b6001600160a01b03811681146114f457600080fd5b6000806040838503121561195c57600080fd5b823561196781611934565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60006020828403121561199b57600080fd5b8135610a5081611934565b6000806000606084860312156119bb57600080fd5b83356119c681611934565b925060208401356119d681611934565b929592945050506040919091013590565b600080604083850312156119fa57600080fd5b8235611a0581611934565b91506020830135611a1581611934565b809150509250929050565b60008083601f840112611a3257600080fd5b50813567ffffffffffffffff811115611a4a57600080fd5b602083019150836020828501011115611a6257600080fd5b9250929050565b60ff811681146114f457600080fd5b60008060008060008060808789031215611a9157600080fd5b863567ffffffffffffffff80821115611aa957600080fd5b611ab58a838b01611a20565b90985096506020890135915080821115611ace57600080fd5b50611adb89828a01611a20565b9095509350506040870135611aef81611a69565b91506060870135611aff81611934565b809150509295509295509295565b600181811c90821680611b2157607f821691505b60208210811415611b4257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611b5a57600080fd5b8151610a5081611934565b634e487b7160e01b600052601160045260246000fd5b60008219821115611b8e57611b8e611b65565b500190565b6020808252600c908201526b3737ba16b3b7bb32b93737b960a11b604082015260600190565b600060208284031215611bcb57600080fd5b8151610a5081611a69565b6020808252601390820152723737ba16b9bcb73a3432ba34b196ba37b5b2b760691b604082015260600190565b6000816000190483118215151615611c1d57611c1d611b65565b500290565b600082611c3f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082821015611ca457611ca4611b65565b500390565b600060208284031215611cbb57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b8051611ce381611934565b919050565b60006020808385031215611cfb57600080fd5b825167ffffffffffffffff80821115611d1357600080fd5b818501915085601f830112611d2757600080fd5b815181811115611d3957611d39611cc2565b8060051b604051601f19603f83011681018181108582111715611d5e57611d5e611cc2565b604052918252848201925083810185019188831115611d7c57600080fd5b938501935b82851015611da157611d9285611cd8565b84529385019392850192611d81565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611dd757611dd7611b65565b5060010190565b600060208284031215611df057600080fd5b81518015158114610a5057600080fd5b60008251611e128184602087016118d1565b919091019291505056fea26469706673582212200eb6511afba3012abeae13818d3b0fd88d83c9131fd7dffb9af2bbee8a69e2ff64736f6c63430008090033";

type DebtTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebtTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebtToken__factory extends ContractFactory {
  constructor(...args: DebtTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DebtToken> {
    return super.deploy(overrides || {}) as Promise<DebtToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DebtToken {
    return super.attach(address) as DebtToken;
  }
  override connect(signer: Signer): DebtToken__factory {
    return super.connect(signer) as DebtToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebtTokenInterface {
    return new utils.Interface(_abi) as DebtTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebtToken {
    return new Contract(address, _abi, signerOrProvider) as DebtToken;
  }
}
